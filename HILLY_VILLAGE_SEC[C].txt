#include<windows.h>
#include<GL/glut.h>
#define PI          3.141516
#include<math.h>




bool night = false;


//____________________________Cloud_________________________
GLfloat position_cloud = 0.0f;
GLfloat speed_cloud = 0.005f;

void update_cloud(int value) {

    if(position_cloud <-1.0)
        position_cloud = 1.0f;

    position_cloud -= speed_cloud;

glutPostRedisplay();
glutTimerFunc(100, update_cloud, 0);
}

//_______________________rain cloud__________________________

        GLfloat Rposition_cloud = 3.5f;
        GLfloat Rspeed_cloud = 0.02f;
        void Rupdate_cloud(int value) {
        if(Rposition_cloud < -0.0)
        Rposition_cloud = 1.0f;
    Rposition_cloud -= Rspeed_cloud;
	glutPostRedisplay();
	glutTimerFunc(100, Rupdate_cloud, 0);
}


//___________________________Boat____________________________
GLfloat position_Boat = 0.0f;
GLfloat speed_Boat = 0.005f;

void update_Boat(int value) {

    if(position_Boat <-1.0)
        position_Boat = 1.0f;

    position_Boat -= speed_Boat;

glutPostRedisplay();
glutTimerFunc(100, update_Boat, 0);
}



//___________________________Bird______________________________
GLfloat position_Bird = 0.0f;
GLfloat speed_Bird = 0.5f;

void update_Bird(int value) {

    if(position_Bird <-1.0)
        position_Bird = 1.0f;

    position_Bird -= speed_Boat;

glutPostRedisplay();
glutTimerFunc(100, update_Bird, 0);
}



//____________________________Rain_____________________________
GLfloat position8 = 0.0f;
GLfloat Speed8= 0.02f;

GLfloat position9 = 0.0f;
GLfloat Speed9= 0.06f;

GLfloat position10 = 0.0f;
GLfloat Speed10= 0.02f;



void updateRain (int value)
{
    if(position8 <-1.0)
        position8 =0.2f;

    position8 -= Speed8;

    glutPostRedisplay();

    if(position9 >1.0)
        position9 =-1.0f;

    position9 += Speed9;

    glutPostRedisplay();


    if(position10 <1.0)
        position10 =-0.1f;

    position10 -= Speed10;

    glutPostRedisplay();

    glutTimerFunc(100,updateRain,0);
}



//Snow_________________________________________________________________________________________________________

GLfloat Position_Snow=3.0f;
GLfloat speed_Snow=0.0105f;
void update_Snow(int value){

if(Position_Snow< -1.50)
    Position_Snow = 1.0f;
    Position_Snow -= speed_Snow;
	glutPostRedisplay();
glutTimerFunc(100, update_Snow , 0);
}


//boat_________________________________________________________________________________________________________
/*GLfloat position_Boat = 0.0f;
GLfloat speed_Boat = 0.009f;
void update_Boat(int value) {

    if(position_Boat <-1.0)
        position_Boat = 1.0f;

    position_Boat -= speed_Boat;

glutPostRedisplay();
glutTimerFunc(100, update_Boat, 0);
}*/


GLfloat position_Boat1 = 0.0f;
GLfloat speed_Boat1 = 0.1f;

void update_Boat1(int value) {

    if(position_Boat1 <-1.0)
        position_Boat1 = 1.0f;

    position_Boat1 -= speed_Boat1;

glutPostRedisplay();
glutTimerFunc(100, update_Boat1, 0);
}







//_______________________________________Baloon_____________________________
GLfloat position_Baloon = 0.0f;
GLfloat speed_Baloon = 0.005f;
void update_Baloon(int value) {

    if(position_Baloon <-1.0)
        position_Baloon = 1.0f;

    position_Baloon -= speed_Baloon;

glutPostRedisplay();
glutTimerFunc(100, update_Baloon, 0);
}


void summer();
void rainDay();
void winter();
void spring();






void Idle()
{
    glutPostRedisplay();
}





void display_rainyDay(int b)
{
    glutDisplayFunc(rainDay);

}

void display_winterDay(int b)
{
    glutDisplayFunc(winter);
}

void display_spring(int b)
{
    glutDisplayFunc(spring);
}









///-__________________________________________________________________________________________Summer__________________________________________________________________________________________________

void summer()
{

// Display____________________________
glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);


//Sky___________________________
	glBegin(GL_POLYGON);
	if(night==true)

       {
       glColor3ub(19,24,98);

       }

       else
	glColor3ub(175,238,238);

	glVertex2f(-1.0f, 1.0f);
	glVertex2f(-1.0f, -1.0f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(1.0f, 1.0f);
	  glEnd();



// Sun___________________________________________________________

    GLfloat p8=-0.3f; GLfloat q8= 0.66f; GLfloat r8 = 0.12f;
    int tringle8=40;

    GLfloat tp8 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    if(night==true){
        glColor3ub ( 194,197,204);
    }
    else{
    glColor3f(1.0f,0.9f,0.0f);
    }
    glVertex2f (p8,q8);
    for(int i= 0;i<=tringle8; i++)
    {
        glVertex2f (
                    p8+(r8*cos(i*tp8/tringle8)),
                    q8+(r8*sin(i*tp8/tringle8))
                    );


    }

 glEnd ();






//cloud__________________________________________________________
//Serial : 0


glPushMatrix();
glTranslated(position_cloud,0.0f,0.0f);
    GLfloat p01=-0.8f; GLfloat q01=0.7f; GLfloat r01 = 0.06f;
    int tringle01=40;

    GLfloat tp01 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p01,q01);
    for(int i= 0;i<=tringle01; i++)
    {
        glVertex2f (
                    p01+(r01*cos(i*tp01/tringle01)),
                    q01+(r01*sin(i*tp01/tringle01))
                    );


    }

 glEnd ();

//left 2

     GLfloat p31=-0.75f; GLfloat q31=0.75f; GLfloat r31 = 0.06f;
    int tringle31=40;

    GLfloat tp31 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p31,q31);
    for(int i= 0;i<=tringle31; i++)
    {
        glVertex2f (
                    p31+(r31*cos(i*tp31/tringle31)),
                    q31+(r31*sin(i*tp31/tringle31)));



    }

 glEnd ();

//left 3

     GLfloat p32=-0.69f; GLfloat q32=0.75f; GLfloat r32 = 0.07f;
    int tringle32=40;

    GLfloat tp32 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p32,q32);
    for(int i= 0;i<=tringle32; i++)
    {
        glVertex2f (
                    p32+(r32*cos(i*tp32/tringle32)),
                    q32+(r32*sin(i*tp32/tringle32))
                    );


    }

 glEnd ();


//left 4

GLfloat p33=-0.75f; GLfloat q33=0.7f; GLfloat r33 = 0.07f;
    int tringle33=40;

    GLfloat tp33 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p33,q33);
    for(int i= 0;i<=tringle33; i++)
    {
        glVertex2f (
                    p33+(r33*cos(i*tp33/tringle33)),
                    q33+(r33*sin(i*tp33/tringle33))
                    );


    }

 glEnd ();



    GLfloat p34=0.8f; GLfloat q34=0.7f; GLfloat r34 = 0.06f;
    int tringle34=40;

    GLfloat tp34 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p34,q34);
    for(int i= 0;i<=tringle34; i++)
    {
        glVertex2f (
                    p34+(r34*cos(i*tp34/tringle34)),
                    q34+(r34*sin(i*tp34/tringle34))
                    );


    }

 glEnd ();

//left 2

     GLfloat p35=0.75f; GLfloat q35=0.75f; GLfloat r35 = 0.06f;
    int tringle35=40;

    GLfloat tp35 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p35,q35);
    for(int i= 0;i<=tringle35; i++)
    {
        glVertex2f (
                    p35+(r35*cos(i*tp35/tringle35)),
                    q35+(r35*sin(i*tp35/tringle35)));



    }

 glEnd ();

//left 3

     GLfloat p36=0.69f; GLfloat q36=0.75f; GLfloat r36 = 0.07f;
    int tringle36=40;

    GLfloat tp36 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p36,q36);
    for(int i= 0;i<=tringle36; i++)
    {
        glVertex2f (
                    p36+(r36*cos(i*tp36/tringle36)),
                    q36+(r36*sin(i*tp36/tringle36))
                    );


    }

 glEnd ();

//left 4

GLfloat p37=0.75f; GLfloat q37=0.7f; GLfloat r37 = 0.07f;
    int tringle37=40;

    GLfloat tp37 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p37,q37);
    for(int i= 0;i<=tringle37; i++)
    {
        glVertex2f (
                    p37+(r37*cos(i*tp37/tringle37)),
                    q37+(r37*sin(i*tp37/tringle37))
                    );


    }

 glEnd ();


    GLfloat p38=0.4f; GLfloat q38=0.75f; GLfloat r38 = 0.06f;
    int tringle38=40;

    GLfloat tp38 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p38,q38);
    for(int i= 0;i<=tringle38; i++)
    {
        glVertex2f (
                    p38+(r38*cos(i*tp38/tringle38)),
                    q38+(r38*sin(i*tp38/tringle38))
                    );


    }

 glEnd ();

//left 2

     GLfloat p39=0.35f; GLfloat q39=0.8f; GLfloat r39 = 0.06f;
    int tringle39=40;

    GLfloat tp39 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p39,q39);
    for(int i= 0;i<=tringle39; i++)
    {
        glVertex2f (
                    p39+(r39*cos(i*tp39/tringle39)),
                    q39+(r39*sin(i*tp39/tringle39)));



    }

 glEnd ();

//left 3

     GLfloat p40=0.29f; GLfloat q40=0.8f; GLfloat r40= 0.07f;
    int tringle40=40;

    GLfloat tp40 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p40,q40);
    for(int i= 0;i<=tringle40; i++)
    {
        glVertex2f (
                    p40+(r40*cos(i*tp40/tringle40)),
                    q40+(r40*sin(i*tp40/tringle40))
                    );


    }

 glEnd ();

//left 4

GLfloat p41=0.35f; GLfloat q41=0.75f; GLfloat r41 = 0.07f;
    int tringle41=40;

    GLfloat tp41 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p41,q41);
    for(int i= 0;i<=tringle41; i++)
    {
        glVertex2f (
                    p41+(r41*cos(i*tp41/tringle41)),
                    q41+(r41*sin(i*tp41/tringle41))
                    );


    }


 glEnd ();
glPopMatrix();





//____________________Bird ____________________ Faysal (20-43800-2)____________________
//1
glPushMatrix();
glTranslated(position_Bird,position_Bird,0.0f);


    glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f); // brown
    glVertex2f(-0.71,0.73);
    glVertex2f(-0.7,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f); // brown
    glVertex2f(-0.69,0.73);
    glVertex2f(-0.7,0.7);
    glEnd();


//2

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.61,0.73);
    glVertex2f(-0.6,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.59,0.73);
    glVertex2f(-0.6,0.7);
    glEnd();


//3
           glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.66,0.66);
    glVertex2f(-0.65,0.65);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.64,0.66);
    glVertex2f(-0.65,0.65);
    glEnd();


//4

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.66,0.73);
    glVertex2f(-0.65,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.64,0.73);
    glVertex2f(-0.65,0.7);
    glEnd();

glPopMatrix();



// Hill______________________________

//1......
//Left : Front Side

glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-1.0f , 0.0f);
   glEnd();



//Left : Back Side

glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-0.30f , 0.0f);
   glEnd();



//2......
//Right : Front Side
glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(1.0f , 0.0f);
   glEnd();



//Right : Back Side
glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(0.30f , 0.0f);
   glEnd();



//3......
//Center : Front Side

glBegin(GL_POLYGON);
   glColor3f(1.0f, 0.5f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.05f, 0.53f);
   glVertex2f(-0.01f, 0.55f);
   glVertex2f(0.35f , 0.0f);
   glEnd();


/*
//Center : Back Side

glBegin(GL_TRIANGLES);
   glColor3f(0.9f, 0.45f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.35f , 0.0f);
   glEnd();

*/


//Fountain______________________

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(-0.04f, 0.535f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.13f, 0.0f);
   glVertex2f(0.06f , 0.0f);
   glEnd();



//Fountain Stream____________________________________________________________//Code no 614 - 700 ........animation added Y vertically___________________________________
//1



glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.06f, 0.5f);
   glVertex2f(-0.056f, 0.53f);
   glVertex2f(-0.06f, 0.46f);
   glVertex2f(-0.05f , 0.3f);
   glEnd();



//2

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.088f, 0.5f);
   glVertex2f(-0.086f, 0.53f);
   glVertex2f(-0.088f, 0.46f);
   glVertex2f(-0.08f , 0.3f);
   glEnd();



//3

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.027f, 0.4f);
   glVertex2f(-0.02f, 0.33f);
   glVertex2f(-0.023f, 0.36f);
   glVertex2f(-0.02f , 0.2f);
   glEnd();



//4

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.074f, 0.3f);
   glVertex2f(-0.07f, 0.33f);
   glVertex2f(-0.072f, 0.26f);
   glVertex2f(-0.07f , 0.2f);
   glEnd();



//5

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.014f, 0.15f);
   glVertex2f(-0.01f, 0.1f);
   glVertex2f(-0.015f, 0.12f);
   glVertex2f(-0.012f , 0.01f);
   glEnd();



//6

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.095f, 0.15f);
   glVertex2f(-0.094f, 0.1f);
   glVertex2f(-0.092f, 0.12f);
   glVertex2f(-0.09f , 0.01f);
   glEnd();



//7

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.064f, 0.15f);
   glVertex2f(-0.062f, 0.1f);
   glVertex2f(-0.06f, 0.12f);
   glVertex2f(-0.057f , 0.01f);
   glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 00
//1

    GLfloat p001=0.04f; GLfloat q001= -0.01f; GLfloat r001 = 0.031f;
    int tringle001=40;

    GLfloat tp001 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p001,q001);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p001+(r001*cos(i*tp001/tringle001)),
                    q001+(r001*sin(i*tp001/tringle001))
                    );
    }

 glEnd ();


//2

     GLfloat p002=0.0f; GLfloat q002= -0.01f; GLfloat r002 = 0.023f;
    int tringle002=40;

    GLfloat tp002 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p002,q002);
    for(int i= 0;i<=tringle002; i++)
    {
        glVertex2f (
                    p002+(r002*cos(i*tp002/tringle002)),
                    q002+(r002*sin(i*tp002/tringle002))
                    );
    }

 glEnd ();


//3

    GLfloat p003=-0.02f; GLfloat q003= -0.01f; GLfloat r003 = 0.028f;
    int tringle003=40;

    GLfloat tp003 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p003,q003);
    for(int i= 0;i<=tringle003; i++)
    {
        glVertex2f (
                    p003+(r003*cos(i*tp003/tringle003)),
                    q003+(r003*sin(i*tp003/tringle003))
                    );
    }

 glEnd ();


//4

    GLfloat p004=-0.07f; GLfloat q004= -0.01f; GLfloat r004 = 0.036f;
    int tringle004=40;

    GLfloat tp004 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p004,q004);
    for(int i= 0;i<=tringle004; i++)
    {
        glVertex2f (
                    p004+(r004*cos(i*tp004/tringle004)),
                    q004+(r004*sin(i*tp004/tringle004))
                    );
    }

 glEnd ();


//5

    GLfloat p005=-0.115f; GLfloat q005= -0.01f; GLfloat r005 = 0.022f;
    int tringle005=40;

    GLfloat tp005 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p005,q005);
    for(int i= 0;i<=tringle005; i++)
    {
        glVertex2f (
                    p005+(r005*cos(i*tp005/tringle005)),
                    q005+(r005*sin(i*tp005/tringle005))
                    );
    }

 glEnd ();







//Path________________________
//including with hill

 glBegin(GL_QUADS);
 glColor3ub(45,107,47);
 glVertex2f(1.0f,0.0f);
 glVertex2f(-1.0f,0.0f);
 glVertex2f(-1.0f,-0.50f);
 glVertex2f(1.0f,-.50f);
 glEnd();


//River________________________
//include with fountain
//River Line
//1

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(-0.14f,0.0f);
 glVertex2f(-0.04f,-0.50f);
 glEnd();



 //2

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.07f,0.0f);
 glVertex2f(0.055f,-0.30f);
 glEnd();



 //River Water

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(0.07f , 0.0f);
   glVertex2f(-0.14f, 0.0f);
   glVertex2f(-0.05f,-0.50f);
   glVertex2f(0.05f,-0.50f);
   glEnd();



//River Stream_______________________________________________code 872 to 892_______________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.09f ,-0.05f);
glVertex2d(-0.09f ,-0.1f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.03f ,-0.02f);
glVertex2d(0.03f ,-0.1f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.03f ,-0.02f);
glVertex2d(-0.035f ,-0.1f);
glEnd();




//Back Green hill_____________________________________________
//Serial : normal digit
//1
//Left


    GLfloat p1=-0.70f; GLfloat q1= -0.1f; GLfloat r1 = 0.4f;
    int tringle1=40;

    GLfloat tp1 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p1,q1);
    for(int i= 0;i<=tringle1; i++)
    {
        glVertex2f (
                    p1+(r1*cos(i*tp1/tringle1)),
                    q1+(r1*sin(i*tp1/tringle1))
                    );


    }

 glEnd ();






//2
//Right


    GLfloat p2=0.70f; GLfloat q2= -0.1f; GLfloat r2 = 0.4f;
    int tringle2=40;

    GLfloat tp2 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p2,q2);
    for(int i= 0;i<=tringle2; i++)
    {
        glVertex2f (
                    p2+(r2*cos(i*tp2/tringle2)),
                    q2+(r2*sin(i*tp2/tringle2))
                    );


    }

 glEnd ();





//Center Green hill1______________________________________________
//Serial : normal digit
//1
//Left

 GLfloat p4=-0.95f; GLfloat q4= -0.22f; GLfloat r4 = 0.35f;
    int tringle4=40;

    GLfloat tp4 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p4,q4);
    for(int i= 0;i<=tringle4; i++)
    {
        glVertex2f (
                    p4+(r4*cos(i*tp4/tringle4)),
                    q4+(r4*sin(i*tp4/tringle4))
                    );


    }

 glEnd ();



//2

 GLfloat p5=-0.46f; GLfloat q5= -0.45f; GLfloat r5 = 0.48f;
    int tringle5=40;

    GLfloat tp5 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p5,q5);
    for(int i= 0;i<=tringle5; i++)
    {
        glVertex2f (
                    p5+(r5*cos(i*tp5/tringle5)),
                    q5+(r5*sin(i*tp5/tringle5))
                    );


    }

 glEnd ();




//3

 GLfloat p6=0.15f; GLfloat q6= -0.53f; GLfloat r6 = 0.48f;
    int tringle6=40;

    GLfloat tp6 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p6,q6);
    for(int i= 0;i<=tringle6; i++)
    {
        glVertex2f (
                    p6+(r6*cos(i*tp6/tringle6)),
                    q6+(r6*sin(i*tp6/tringle6))
                    );


    }

 glEnd ();





//4
//Right

 GLfloat p7=0.7f; GLfloat q7= -0.35f; GLfloat r7 = 0.50f;
    int tringle7=40;

    GLfloat tp7 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p7,q7);
    for(int i= 0;i<=tringle7; i++)
    {
        glVertex2f (
                    p7+(r7*cos(i*tp7/tringle7)),
                    q7+(r7*sin(i*tp7/tringle7))
                    );


    }

 glEnd ();






//Front path_________________________
//1

 glBegin(GL_QUADS);
 glColor3f(0.3f,0.7f,0.0f);
 glVertex2f(1.0f,-0.25f);
 glVertex2f(-1.0f,-0.25f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


//2

 glBegin(GL_QUADS);
 glColor3f(0.7f,0.8f,0.0f);
 glVertex2f(1.0f,-0.40f);
 glVertex2f(-1.0f,-0.40f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


 //3

 glBegin(GL_QUADS);
 glColor3f(0.8f,0.5f,0.0f);
 glVertex2f(1.0f,-0.70f);
 glVertex2f(-1.0f,-0.70f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();







//__________________ Corn Field __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.7f,-0.1f);
    glVertex2d(0.69f,-0.38f);
    glVertex2d(0.71f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.7,-0.2);
    glVertex2f(0.7,-0.4);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.72f,-0.1f);
    glVertex2d(0.71f,-0.38f);
    glVertex2d(0.73f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.72,-0.2);
    glVertex2f(0.72,-0.4);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.74f,-0.1f);
    glVertex2d(0.73f,-0.38f);
    glVertex2d(0.75f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.74,-0.2);
    glVertex2f(0.74,-0.4);
    glEnd();

        //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.76f,-0.1f);
    glVertex2d(0.75f,-0.38f);
    glVertex2d(0.77f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.76,-0.2);
    glVertex2f(0.76,-0.4);
    glEnd();

            //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.78f,-0.1f);
    glVertex2d(0.77f,-0.38f);
    glVertex2d(0.79f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.78,-0.2);
    glVertex2f(0.78,-0.4);
    glEnd();

                //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.8f,-0.1f);
    glVertex2d(0.79f,-0.38f);
    glVertex2d(0.81f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.8,-0.2);
    glVertex2f(0.8,-0.4);
    glEnd();

                    //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.82f,-0.1f);
    glVertex2d(0.81f,-0.38f);
    glVertex2d(0.83f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.82,-0.2);
    glVertex2f(0.82,-0.4);
    glEnd();

                        //8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.84f,-0.1f);
    glVertex2d(0.83f,-0.38f);
    glVertex2d(0.85f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.84,-0.2);
    glVertex2f(0.84,-0.4);
    glEnd();

//9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.86f,-0.1f);
    glVertex2d(0.85f,-0.38f);
    glVertex2d(0.87f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.86,-0.2);
    glVertex2f(0.86,-0.4);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.88f,-0.1f);
    glVertex2d(0.87f,-0.38f);
    glVertex2d(0.89f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.88,-0.2);
    glVertex2f(0.88,-0.4);
    glEnd();



//Corn Field Backward 1_________________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.67f,-0.0f);
    glVertex2d(0.66f,-0.24f);
    glVertex2d(0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.67f,-0.1f);
    glVertex2f(0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.69f,-0.0f);
    glVertex2d(0.68f,-0.24f);
    glVertex2d(0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.69f,-0.1f);
    glVertex2f(0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.71f,-0.0f);
    glVertex2d(0.7f,-0.24f);
    glVertex2d(0.72f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.71f,-0.1f);
    glVertex2f(0.71f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.73f,-0.0f);
    glVertex2d(0.72f,-0.24f);
    glVertex2d(0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.73f,-0.1f);
    glVertex2f(0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.75f,-0.0f);
    glVertex2d(0.74f,-0.24f);
    glVertex2d(0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.75f,-0.1f);
    glVertex2f(0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.77f,-0.0f);
    glVertex2d(0.76f,-0.24f);
    glVertex2d(0.78f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.77f,-0.1f);
    glVertex2f(0.77f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.79f,-0.0f);
    glVertex2d(0.78f,-0.24f);
    glVertex2d(0.8f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.79f,-0.1f);
    glVertex2f(0.79f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.81f,-0.0f);
    glVertex2d(0.8f,-0.24f);
    glVertex2d(0.82f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.81f,-0.1f);
    glVertex2f(0.81f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.83f,-0.0f);
    glVertex2d(0.82f,-0.24f);
    glVertex2d(0.84f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.83f,-0.1f);
    glVertex2f(0.83f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.85f,-0.0f);
    glVertex2d(0.84f,-0.24f);
    glVertex2d(0.86f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.85f,-0.1f);
    glVertex2f(0.85f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.87f,-0.0f);
    glVertex2d(0.86f,-0.24f);
    glVertex2d(0.88f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.87f,-0.1f);
    glVertex2f(0.87f,-0.26f);
    glEnd();

//__________________ Random Tree __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.78f,0.24f);
    glVertex2d(-0.76f,0.1f);
    glVertex2d(-0.8f,0.1f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.78f,0.16f);
    glVertex2f(-0.78f,0.05f);
    glEnd();

    //2
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.88f,0.3f);
    glVertex2d(-0.86f,0.15f);
    glVertex2d(-0.9f,0.15f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.88f,0.26f);
    glVertex2f(-0.88f,0.09f);
    glEnd();

    //3
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.58f,0.2f);
    glVertex2d(-0.56f,0.05f);
    glVertex2d(-0.6f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.58f,0.16f);
    glVertex2f(-0.58f,0.0f);
    glEnd();

    //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.38f,0.2f);
    glVertex2d(-0.36f,0.05f);
    glVertex2d(-0.4f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.38f,0.16f);
    glVertex2f(-0.38f,0.0f);
    glEnd();

    // Part 2

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.67f,-0.0f);
    glVertex2d(-0.66f,-0.24f);
    glVertex2d(-0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.67f,-0.1f);
    glVertex2f(-0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(-0,102,0);
    glVertex2d(-0.69f,-0.0f);
    glVertex2d(-0.68f,-0.24f);
    glVertex2d(-0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.69f,-0.1f);
    glVertex2f(-0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.31f,-0.0f);
    glVertex2d(-0.3f,-0.24f);
    glVertex2d(-0.32f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.31f,-0.1f);
    glVertex2f(-0.31f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.73f,-0.0f);
    glVertex2d(-0.72f,-0.24f);
    glVertex2d(-0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.73f,-0.1f);
    glVertex2f(-0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.75f,-0.0f);
    glVertex2d(-0.74f,-0.24f);
    glVertex2d(-0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.75f,-0.1f);
    glVertex2f(-0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.47f,-0.0f);
    glVertex2d(-0.46f,-0.24f);
    glVertex2d(-0.48f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.47f,-0.1f);
    glVertex2f(-0.47f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.96f,-0.0f);
    glVertex2d(-0.95f,-0.24f);
    glVertex2d(-0.97f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.96f,-0.1f);
    glVertex2f(-0.96f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.11f,-0.0f);
    glVertex2d(-0.1f,-0.24f);
    glVertex2d(-0.12f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.11f,-0.1f);
    glVertex2f(-0.11f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.05f,-0.1f);
    glVertex2d(0.04f,-0.24f);
    glVertex2d(0.06f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.05f,-0.15f);
    glVertex2f(0.05f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.15f,-0.07f);
    glVertex2d(-0.14f,-0.24f);
    glVertex2d(-0.16f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.15f,-0.1f);
    glVertex2f(-0.15f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.17f,-0.0f);
    glVertex2d(-0.16f,-0.24f);
    glVertex2d(-0.18f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.17f,-0.1f);
    glVertex2f(-0.17f,-0.26f);
    glEnd();


//_________ Middle Corn Field __________

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.68f,-0.1f);
    glVertex2d(0.67f,-0.34f);
    glVertex2d(0.69f,-0.34f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.68f,-0.2f);
    glVertex2f(0.68f,-0.36f);
    glEnd();

/*
//__________________ Baloon __________________ Faysal (20-43800-2)__________________
glPushMatrix();
glTranslated(position_Baloon,0.01f,0.01f);
glLineWidth(3.5);
glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);
glVertex2d(-0.68f , 0.7);
glVertex2d(-0.68f , 0.55f);
glEnd();

glLineWidth(3.5);
glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);
glVertex2d(-0.72f , 0.7f);
glVertex2d(-0.72f , 0.55f);
glEnd();




GLfloat p201= -0.7f; GLfloat q201= 0.7f; GLfloat r201 = 0.05f;
    int tringle201=40;

    GLfloat tp201 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0,102,204);
    glVertex2f (p201,q201);
    for(int i= 0;i<=tringle201; i++)
    {
        glVertex2f (p201+(r201*cos(i*tp201/tringle201)),
                    q201+(r201*sin(i*tp201/tringle201))
                    );


    }
    glEnd();

    GLfloat p210= -0.7f; GLfloat q210= 0.67f; GLfloat r210 = 0.035f;
    int tringle210=40;

    GLfloat tp210 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0,102,204);
    glVertex2f (p210,q210);
    for(int i= 0;i<=tringle210; i++)
    {
        glVertex2f (p210+(r210*cos(i*tp210/tringle210)),
                    q210+(r210*sin(i*tp210/tringle210))
                    );


    }
    glEnd();

    glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2d(-0.72f , 0.6f);
	glVertex2d(-0.72f , 0.55f);
	glVertex2d(-0.68f , 0.6f);
	glVertex2d(-0.68f , 0.55f);
	glVertex2d(-0.72f , 0.55f);
	glEnd();

	    glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 0.0);
	glVertex2d(-0.72f , 0.59f);
	glVertex2d(-0.72f , 0.55f);
	glVertex2d(-0.68f , 0.59f);
	glVertex2d(-0.68f , 0.55f);
	glVertex2d(-0.72f , 0.55f);
	glEnd();



glPopMatrix();
*/
//house_________________________________________________

//a
 glBegin(GL_QUADS);
	glColor3f(1.78f, 1.74f,0.73f);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.55f, -0.65f);

	glVertex2f(-0.55f, -0.5f);
	glVertex2f(-0.75f, -0.5f);
	glEnd();

//b
 glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.78f, -0.68f);

	glVertex2f(-0.52f, -0.68f);
	glVertex2f(-0.55f, -0.65f);
	glEnd();


//c
glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.77,-0.5);
    glVertex2f(-0.53,-0.5);
    glVertex2f(-0.65,-0.42);

    glEnd();

 //d
 glBegin(GL_QUADS);
	glColor3f(1.00f, 0.0f,0.0f);

	glVertex2f(-0.68f, -0.65f);
	glVertex2f(-0.62f, -0.65f);

	glVertex2f(-0.62f, -0.55f);
	glVertex2f(-0.68f, -0.55f);
	glEnd();




    //h0use small
    //a


		glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.25f, -0.5f);

	glVertex2f(-0.25f, -0.35f);
	glVertex2f(-0.45f, -0.35f);
	glEnd();


	//b
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.5,-0.35);
    glVertex2f(-0.2,-0.35);
    glVertex2f(-0.35,-0.25);

    glEnd();

//c
glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.5f, -0.55f);

	glVertex2f(-0.2f, -0.55f);
	glVertex2f(-0.25f, -0.5f);
	glEnd();

	//d
	glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);
	glVertex2f(-0.38f, -0.5f);
	glVertex2f(-0.32f, -0.5f);

	glVertex2f(-0.32f, -0.42f);
	glVertex2f(-0.38f, -0.42f);
	glEnd();

	//road big house
	glBegin(GL_QUADS);
	glColor3f(0.92f, 0.53f, 0.17f);

	glVertex2f(-0.8f, -1.0f);
	glVertex2f(-0.7f, -1.0f);

	glVertex2f(-0.6f, -0.75f);
	glVertex2f(-0.7f, -0.75f);
	glEnd();

	//house 3
	//a
	glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.75f, -0.25f);
	glVertex2f(-0.75f, -0.35f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.55f, -0.25f);
	glEnd();

//b

glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.8f, -0.4f);
	glVertex2f(-0.5f, -0.4f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.75f, -0.35f);
	glEnd();

	//c
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.8,-0.25);
    glVertex2f(-0.5,-0.25);
    glVertex2f(-0.65,-0.18);

    glEnd();

    //d
    glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);

	glVertex2f(-0.68f, -0.35f);
	glVertex2f(-0.62f, -0.35f);

	glVertex2f(-0.62f, -0.26f);
	glVertex2f(-0.68f, -0.26f);
	glEnd();





//____________________ Tree ____________________ Faysal (20-43800-2)____________________

    GLfloat p9= -0.9f; GLfloat q9= -0.4f; GLfloat r9 = 0.12f;
    int tringle9=40;

    GLfloat tp9 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p9,q9);
    for(int i= 0;i<=tringle9; i++)
    {
        glVertex2f (p9+(r9*cos(i*tp9/tringle9)),
                    q9+(r9*sin(i*tp9/tringle9))
                    );


    }
    glEnd();

    GLfloat p10= -0.9f; GLfloat q10= -0.3f; GLfloat r10 = 0.10f;
    int tringle10=40;

    GLfloat tp10 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p10,q10);
    for(int i= 0;i<=tringle10; i++)
    {
        glVertex2f (p10+(r10*cos(i*tp10/tringle10)),
                    q10+(r10*sin(i*tp10/tringle10))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.9,-0.7);
    glVertex2f(-0.9,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.95,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.85,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();


    //Tree 2
    GLfloat p11= -0.1f; GLfloat q11= -0.4f; GLfloat r11 = 0.12f;
    int tringle11=40;

    GLfloat tp11 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p11,q11);
    for(int i= 0;i<=tringle11; i++)
    {
        glVertex2f (p11+(r11*cos(i*tp11/tringle11)),
                    q11+(r11*sin(i*tp11/tringle11))
                    );


    }
    glEnd();

    GLfloat p12= -0.1f; GLfloat q12= -0.3f; GLfloat r12 = 0.10f;
    int tringle12=40;

    GLfloat tp12 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p12,q12);
    for(int i= 0;i<=tringle12; i++)
    {
        glVertex2f (p12+(r12*cos(i*tp12/tringle12)),
                    q12+(r12*sin(i*tp12/tringle12))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.1,-0.7);
    glVertex2f(-0.1,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.2,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(0.0,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();





//Front River_________________________
//River Line
//1

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.125f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glEnd();



 //2

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.195f,-1.0f);
 glEnd();



//3

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.31f,-0.25f);
 glVertex2f(0.405f,-0.70f);
 glEnd();



//4

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(1.0f,-0.7f);
 glEnd();


 //5

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(-1.0f,-0.7f);
 glEnd();






//Front Fountain____________________
//1 : Attached

 glBegin(GL_QUADS);
 glColor3ub(30,144,255);
 glVertex2f(0.26f,-0.06f);
 glVertex2f(0.10f,-0.05f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.32f,-0.25f);
 glEnd();


// Fountain Stream___________________________________________________________code : 2092 to 2126___________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.08f);
glVertex2d(0.17f ,-0.2f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.1f);
glVertex2d(0.21f ,-0.2f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.13f);
glVertex2d(0.14f ,-0.23f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.18f ,-0.17f);
glVertex2d(0.189f ,-0.23f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.13f);
glVertex2d(0.27f ,-0.19f);
glEnd();



//River Water____________________
//1 : Attached

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(0.32f,-0.25f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.20f,-1.0f);
 glVertex2f(0.40f,-0.70f);

 glEnd();


 // 1.River Stream____________________________________________code : 2144 to 2192_________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.6f);
glVertex2d(0.17f ,-0.67f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.4f);
glVertex2d(0.21f ,-0.45f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.43f);
glVertex2d(0.14f ,-0.48f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.53f);
glVertex2d(0.32f ,-0.57f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.63f);
glVertex2d(0.27f ,-0.69f);
glEnd();




//2

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(1.0f,-0.7f);
 glVertex2f(-1.0f,-0.7f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


  // 2.River Stream____________________________________________code : 2195 to 2238__________________________Animation added x horizontally________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.1f ,-0.8f);
glVertex2d(0.2f ,-0.8f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.1f ,-0.9f);
glVertex2d(-0.21f ,-0.9f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.93f);
glVertex2d(0.4f ,-0.937f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.8f ,-0.83f);
glVertex2d(-0.9f ,-0.836f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.5f ,-0.85f);
glVertex2d(0.6f ,-0.86f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.6f ,-0.91f);
glVertex2d(-0.7f ,-0.92f);
glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 01
//1

    GLfloat p011=0.295f; GLfloat q011= -0.26f; GLfloat r011 = 0.028f;
    int tringle011=40;

    GLfloat tp011 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p011,q011);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p011+(r011*cos(i*tp011/tringle011)),
                    q011+(r011*sin(i*tp011/tringle011))
                    );
    }

 glEnd ();


//2

     GLfloat p012=0.25f; GLfloat q012= -0.26f; GLfloat r012 = 0.025f;
    int tringle012=40;

    GLfloat tp012 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p012,q012);
    for(int i= 0;i<=tringle012; i++)
    {
        glVertex2f (
                    p012+(r012*cos(i*tp012/tringle012)),
                    q012+(r012*sin(i*tp012/tringle012))
                    );
    }

 glEnd ();


//3

    GLfloat p013=0.2f; GLfloat q013= -0.26f; GLfloat r013 = 0.028f;
    int tringle013=40;

    GLfloat tp013 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p013,q013);
    for(int i= 0;i<=tringle013; i++)
    {
        glVertex2f (
                    p013+(r013*cos(i*tp013/tringle013)),
                    q013+(r013*sin(i*tp013/tringle013))
                    );
    }

 glEnd ();


//4

    GLfloat p014=0.155f; GLfloat q014= -0.26f; GLfloat r014 = 0.036f;
    int tringle014=40;

    GLfloat tp014 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p014,q014);
    for(int i= 0;i<=tringle014; i++)
    {
        glVertex2f (
                    p014+(r014*cos(i*tp014/tringle014)),
                    q014+(r014*sin(i*tp014/tringle014))
                    );
    }

 glEnd ();









//Stick_______________________________

glLineWidth(4.5);
glBegin(GL_LINES);
glColor3ub(139,69,19);
glVertex2d(-0.328f,-0.69f);
glVertex2d(-0.328f,-0.61f);
glEnd();







//Barrier boat______________________________

glBegin(GL_QUADS);
glColor3ub(128,0,0);
glVertex2d(-0.1f,-0.71f);
glVertex2d(-0.3f,-0.71f);
glVertex2d(-0.24f,-0.76f);
glVertex2d(-0.16f,-0.76f);
glEnd();

//Rope
//1
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.33f,-0.65f);
glVertex2d(-0.28f,-0.71f);
glEnd();

//2
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.28f,-0.71f);
glVertex2d(-0.287f,-0.72f);
glEnd();


//load
//front

glBegin(GL_QUADS);
glColor3ub(184,134,12);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.16f,-0.68f);
glVertex2d(-0.15f,-0.71f);
glVertex2d(-0.23f,-0.71f);
glEnd();

//back

glBegin(GL_TRIANGLES);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.24f,-0.71f);
glVertex2d(-0.22f,-0.71f);
glEnd();



//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();

    //__________________ Boat __________________ Faysal (20-43800-2)__________________

glPushMatrix();
glTranslated(position_Boat,0.0f,0.0f);

glBegin(GL_POLYGON);
glColor3f(0.0f,0.0f,0.0f);
glVertex2d(0.4f,-0.78f);
glVertex2d(0.49f,-0.85f);
glVertex2d(0.61f,-0.85f);
glVertex2d(0.7f,-0.78f);
glEnd();

    glLineWidth(1.5f);
    glBegin(GL_LINES);
    glColor3ub(0.0f, 0.0f, 0.0f);
    glVertex2f(0.55,-0.78);
    glVertex2f(0.55,-0.5);
    glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.545f,-0.45f);
glVertex2d(0.47f,-0.77f);
glVertex2d(0.545f,-0.77f);
glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.555f,-0.45f);
glVertex2d(0.65f,-0.77f);
glVertex2d(0.555f,-0.77f);
glEnd();








//Boat___________________________________




glBegin(GL_QUADS);
glColor3f(0.5,0.0f,0.0f);
glVertex2d(0.3f,-0.87f);
glVertex2d(0.5f,-0.87f);
glVertex2d(0.44f,-0.92f);
glVertex2d(0.36f,-0.92f);
glEnd();


//load

glBegin(GL_QUADS);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(0.46f,-0.85f);
glVertex2d(0.38f,-0.85f);
glVertex2d(0.38f,-0.87f);
glVertex2d(0.46f,-0.87f);
glEnd();


//stick
//1

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.87f);
glVertex2d(0.44f,-0.77f);
glEnd();


//2

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.87f);
glVertex2d(0.43f,-0.77f);
glEnd();


//3

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.87f);
glVertex2d(0.4f,-0.81f);
glEnd();


//Flag
//1
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.77f);
glVertex2d(0.48f,-0.84f);
glVertex2d(0.44f,-0.83f);
glEnd();

//2
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.77f);
glVertex2d(0.39f,-0.84f);
glVertex2d(0.43f,-0.83f);
glEnd();


//3

glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.81f);
glVertex2d(0.37f,-0.85f);
glVertex2d(0.4f,-0.84f);
glEnd();
glPopMatrix();






glFlush();






//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();





glutTimerFunc(5000,display_rainyDay,0);

Idle();
glFlush();
}



///___________________________________________________________________________________________Rainy Day________________________________________________________________________________________________




void rainDay()
{

// Display____________________________
glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);


//Sky___________________________
	glBegin(GL_POLYGON);
	if(night==true)

       {
       glColor3ub(19,24,98);

       }

       else
	glColor3ub(147, 185, 201);

	glVertex2f(-1.0f, 1.0f);
	glVertex2f(-1.0f, -1.0f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(1.0f, 1.0f);
	  glEnd();








//cloud__________________________________________________________
//Serial : 0



       glPushMatrix();
       glTranslatef(Rposition_cloud, 0.0f,0.0f);
    GLfloat p01=-0.8f; GLfloat q01=0.7f; GLfloat r01 = 0.06f;
    int tringle01=40;

    GLfloat tp01 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p01,q01);
    for(int i= 0;i<=tringle01; i++)
    {
        glVertex2f (
                    p01+(r01*cos(i*tp01/tringle01)),
                    q01+(r01*sin(i*tp01/tringle01))
                    );


    }

 glEnd ();

//left 2

     GLfloat p31=-0.75f; GLfloat q31=0.75f; GLfloat r31 = 0.06f;
    int tringle31=40;

    GLfloat tp31 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p31,q31);
    for(int i= 0;i<=tringle31; i++)
    {
        glVertex2f (
                    p31+(r31*cos(i*tp31/tringle31)),
                    q31+(r31*sin(i*tp31/tringle31)));



    }

 glEnd ();

//left 3

     GLfloat p32=-0.69f; GLfloat q32=0.75f; GLfloat r32 = 0.07f;
    int tringle32=40;

    GLfloat tp32 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p32,q32);
    for(int i= 0;i<=tringle32; i++)
    {
        glVertex2f (
                    p32+(r32*cos(i*tp32/tringle32)),
                    q32+(r32*sin(i*tp32/tringle32))
                    );


    }

 glEnd ();


//left 4

GLfloat p33=-0.75f; GLfloat q33=0.7f; GLfloat r33 = 0.07f;
    int tringle33=40;

    GLfloat tp33 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p33,q33);
    for(int i= 0;i<=tringle33; i++)
    {
        glVertex2f (
                    p33+(r33*cos(i*tp33/tringle33)),
                    q33+(r33*sin(i*tp33/tringle33))
                    );


    }

 glEnd ();



    GLfloat p34=0.8f; GLfloat q34=0.7f; GLfloat r34 = 0.06f;
    int tringle34=40;

    GLfloat tp34 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p34,q34);
    for(int i= 0;i<=tringle34; i++)
    {
        glVertex2f (
                    p34+(r34*cos(i*tp34/tringle34)),
                    q34+(r34*sin(i*tp34/tringle34))
                    );


    }

 glEnd ();

//left 2

     GLfloat p35=0.75f; GLfloat q35=0.75f; GLfloat r35 = 0.06f;
    int tringle35=40;

    GLfloat tp35 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
   glColor3ub(158, 161, 163);
    glVertex2f (p35,q35);
    for(int i= 0;i<=tringle35; i++)
    {
        glVertex2f (
                    p35+(r35*cos(i*tp35/tringle35)),
                    q35+(r35*sin(i*tp35/tringle35)));



    }

 glEnd ();

//left 3

     GLfloat p36=0.69f; GLfloat q36=0.75f; GLfloat r36 = 0.07f;
    int tringle36=40;

    GLfloat tp36 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
   glColor3ub(158, 161, 163);
    glVertex2f (p36,q36);
    for(int i= 0;i<=tringle36; i++)
    {
        glVertex2f (
                    p36+(r36*cos(i*tp36/tringle36)),
                    q36+(r36*sin(i*tp36/tringle36))
                    );


    }

 glEnd ();

//left 4

GLfloat p37=0.75f; GLfloat q37=0.7f; GLfloat r37 = 0.07f;
    int tringle37=40;

    GLfloat tp37 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p37,q37);
    for(int i= 0;i<=tringle37; i++)
    {
        glVertex2f (
                    p37+(r37*cos(i*tp37/tringle37)),
                    q37+(r37*sin(i*tp37/tringle37))
                    );


    }

 glEnd ();


    GLfloat p38=0.4f; GLfloat q38=0.75f; GLfloat r38 = 0.06f;
    int tringle38=40;

    GLfloat tp38 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
   glColor3ub(158, 161, 163);
    glVertex2f (p38,q38);
    for(int i= 0;i<=tringle38; i++)
    {
        glVertex2f (
                    p38+(r38*cos(i*tp38/tringle38)),
                    q38+(r38*sin(i*tp38/tringle38))
                    );


    }

 glEnd ();

//left 2

     GLfloat p39=0.35f; GLfloat q39=0.8f; GLfloat r39 = 0.06f;
    int tringle39=40;

    GLfloat tp39 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p39,q39);
    for(int i= 0;i<=tringle39; i++)
    {
        glVertex2f (
                    p39+(r39*cos(i*tp39/tringle39)),
                    q39+(r39*sin(i*tp39/tringle39)));



    }

 glEnd ();

//left 3

     GLfloat p40=0.29f; GLfloat q40=0.8f; GLfloat r40= 0.07f;
    int tringle40=40;

    GLfloat tp40 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p40,q40);
    for(int i= 0;i<=tringle40; i++)
    {
        glVertex2f (
                    p40+(r40*cos(i*tp40/tringle40)),
                    q40+(r40*sin(i*tp40/tringle40))
                    );


    }

 glEnd ();

//left 4

GLfloat p41=0.35f; GLfloat q41=0.75f; GLfloat r41 = 0.07f;
    int tringle41=40;

    GLfloat tp41 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(158, 161, 163);
    glVertex2f (p41,q41);
    for(int i= 0;i<=tringle41; i++)
    {
        glVertex2f (
                    p41+(r41*cos(i*tp41/tringle41)),
                    q41+(r41*sin(i*tp41/tringle41))
                    );


    }


 glEnd ();
glPopMatrix();








// Hill______________________________

//1......
//Left : Front Side

glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-1.0f , 0.0f);
   glEnd();



//Left : Back Side

glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-0.30f , 0.0f);
   glEnd();



//2......
//Right : Front Side
glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(1.0f , 0.0f);
   glEnd();



//Right : Back Side
glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(0.30f , 0.0f);
   glEnd();



//3......
//Center : Front Side

glBegin(GL_POLYGON);
   glColor3f(1.0f, 0.5f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.05f, 0.53f);
   glVertex2f(-0.01f, 0.55f);
   glVertex2f(0.35f , 0.0f);
   glEnd();


/*
//Center : Back Side

glBegin(GL_TRIANGLES);
   glColor3f(0.9f, 0.45f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.35f , 0.0f);
   glEnd();

*/


//Fountain______________________

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(-0.04f, 0.535f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.13f, 0.0f);
   glVertex2f(0.06f , 0.0f);
   glEnd();



//Fountain Stream____________________________________________________________//Code no 614 - 700 ........animation added Y vertically___________________________________
//1



glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.06f, 0.5f);
   glVertex2f(-0.056f, 0.53f);
   glVertex2f(-0.06f, 0.46f);
   glVertex2f(-0.05f , 0.3f);
   glEnd();



//2

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.088f, 0.5f);
   glVertex2f(-0.086f, 0.53f);
   glVertex2f(-0.088f, 0.46f);
   glVertex2f(-0.08f , 0.3f);
   glEnd();



//3

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.027f, 0.4f);
   glVertex2f(-0.02f, 0.33f);
   glVertex2f(-0.023f, 0.36f);
   glVertex2f(-0.02f , 0.2f);
   glEnd();



//4

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.074f, 0.3f);
   glVertex2f(-0.07f, 0.33f);
   glVertex2f(-0.072f, 0.26f);
   glVertex2f(-0.07f , 0.2f);
   glEnd();



//5

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.014f, 0.15f);
   glVertex2f(-0.01f, 0.1f);
   glVertex2f(-0.015f, 0.12f);
   glVertex2f(-0.012f , 0.01f);
   glEnd();



//6

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.095f, 0.15f);
   glVertex2f(-0.094f, 0.1f);
   glVertex2f(-0.092f, 0.12f);
   glVertex2f(-0.09f , 0.01f);
   glEnd();



//7

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.064f, 0.15f);
   glVertex2f(-0.062f, 0.1f);
   glVertex2f(-0.06f, 0.12f);
   glVertex2f(-0.057f , 0.01f);
   glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 00
//1

    GLfloat p001=0.04f; GLfloat q001= -0.01f; GLfloat r001 = 0.031f;
    int tringle001=40;

    GLfloat tp001 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p001,q001);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p001+(r001*cos(i*tp001/tringle001)),
                    q001+(r001*sin(i*tp001/tringle001))
                    );
    }

 glEnd ();


//2

     GLfloat p002=0.0f; GLfloat q002= -0.01f; GLfloat r002 = 0.023f;
    int tringle002=40;

    GLfloat tp002 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p002,q002);
    for(int i= 0;i<=tringle002; i++)
    {
        glVertex2f (
                    p002+(r002*cos(i*tp002/tringle002)),
                    q002+(r002*sin(i*tp002/tringle002))
                    );
    }

 glEnd ();


//3

    GLfloat p003=-0.02f; GLfloat q003= -0.01f; GLfloat r003 = 0.028f;
    int tringle003=40;

    GLfloat tp003 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p003,q003);
    for(int i= 0;i<=tringle003; i++)
    {
        glVertex2f (
                    p003+(r003*cos(i*tp003/tringle003)),
                    q003+(r003*sin(i*tp003/tringle003))
                    );
    }

 glEnd ();


//4

    GLfloat p004=-0.07f; GLfloat q004= -0.01f; GLfloat r004 = 0.036f;
    int tringle004=40;

    GLfloat tp004 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p004,q004);
    for(int i= 0;i<=tringle004; i++)
    {
        glVertex2f (
                    p004+(r004*cos(i*tp004/tringle004)),
                    q004+(r004*sin(i*tp004/tringle004))
                    );
    }

 glEnd ();


//5

    GLfloat p005=-0.115f; GLfloat q005= -0.01f; GLfloat r005 = 0.022f;
    int tringle005=40;

    GLfloat tp005 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p005,q005);
    for(int i= 0;i<=tringle005; i++)
    {
        glVertex2f (
                    p005+(r005*cos(i*tp005/tringle005)),
                    q005+(r005*sin(i*tp005/tringle005))
                    );
    }

 glEnd ();







//Path________________________
//including with hill

 glBegin(GL_QUADS);
 glColor3ub(45,107,47);
 glVertex2f(1.0f,0.0f);
 glVertex2f(-1.0f,0.0f);
 glVertex2f(-1.0f,-0.50f);
 glVertex2f(1.0f,-.50f);
 glEnd();


//River________________________
//include with fountain
//River Line
//1

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(-0.14f,0.0f);
 glVertex2f(-0.04f,-0.50f);
 glEnd();



 //2

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.07f,0.0f);
 glVertex2f(0.055f,-0.30f);
 glEnd();



 //River Water

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(0.07f , 0.0f);
   glVertex2f(-0.14f, 0.0f);
   glVertex2f(-0.05f,-0.50f);
   glVertex2f(0.05f,-0.50f);
   glEnd();



//River Stream_______________________________________________code 872 to 892_______________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.09f ,-0.05f);
glVertex2d(-0.09f ,-0.1f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.03f ,-0.02f);
glVertex2d(0.03f ,-0.1f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.03f ,-0.02f);
glVertex2d(-0.035f ,-0.1f);
glEnd();




//Back Green hill_____________________________________________
//Serial : normal digit
//1
//Left


    GLfloat p1=-0.70f; GLfloat q1= -0.1f; GLfloat r1 = 0.4f;
    int tringle1=40;

    GLfloat tp1 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p1,q1);
    for(int i= 0;i<=tringle1; i++)
    {
        glVertex2f (
                    p1+(r1*cos(i*tp1/tringle1)),
                    q1+(r1*sin(i*tp1/tringle1))
                    );


    }

 glEnd ();






//2
//Right


    GLfloat p2=0.70f; GLfloat q2= -0.1f; GLfloat r2 = 0.4f;
    int tringle2=40;

    GLfloat tp2 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p2,q2);
    for(int i= 0;i<=tringle2; i++)
    {
        glVertex2f (
                    p2+(r2*cos(i*tp2/tringle2)),
                    q2+(r2*sin(i*tp2/tringle2))
                    );


    }

 glEnd ();





//Center Green hill1______________________________________________
//Serial : normal digit
//1
//Left

 GLfloat p4=-0.95f; GLfloat q4= -0.22f; GLfloat r4 = 0.35f;
    int tringle4=40;

    GLfloat tp4 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p4,q4);
    for(int i= 0;i<=tringle4; i++)
    {
        glVertex2f (
                    p4+(r4*cos(i*tp4/tringle4)),
                    q4+(r4*sin(i*tp4/tringle4))
                    );


    }

 glEnd ();



//2

 GLfloat p5=-0.46f; GLfloat q5= -0.45f; GLfloat r5 = 0.48f;
    int tringle5=40;

    GLfloat tp5 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p5,q5);
    for(int i= 0;i<=tringle5; i++)
    {
        glVertex2f (
                    p5+(r5*cos(i*tp5/tringle5)),
                    q5+(r5*sin(i*tp5/tringle5))
                    );


    }

 glEnd ();




//3

 GLfloat p6=0.15f; GLfloat q6= -0.53f; GLfloat r6 = 0.48f;
    int tringle6=40;

    GLfloat tp6 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p6,q6);
    for(int i= 0;i<=tringle6; i++)
    {
        glVertex2f (
                    p6+(r6*cos(i*tp6/tringle6)),
                    q6+(r6*sin(i*tp6/tringle6))
                    );


    }

 glEnd ();





//4
//Right

 GLfloat p7=0.7f; GLfloat q7= -0.35f; GLfloat r7 = 0.50f;
    int tringle7=40;

    GLfloat tp7 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p7,q7);
    for(int i= 0;i<=tringle7; i++)
    {
        glVertex2f (
                    p7+(r7*cos(i*tp7/tringle7)),
                    q7+(r7*sin(i*tp7/tringle7))
                    );


    }

 glEnd ();






//Front path_________________________
//1

 glBegin(GL_QUADS);
 glColor3f(0.3f,0.7f,0.0f);
 glVertex2f(1.0f,-0.25f);
 glVertex2f(-1.0f,-0.25f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


//2

 glBegin(GL_QUADS);
 glColor3f(0.7f,0.8f,0.0f);
 glVertex2f(1.0f,-0.40f);
 glVertex2f(-1.0f,-0.40f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


 //3

 glBegin(GL_QUADS);
 glColor3f(0.8f,0.5f,0.0f);
 glVertex2f(1.0f,-0.70f);
 glVertex2f(-1.0f,-0.70f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();







//__________________ Corn Field __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.7f,-0.1f);
    glVertex2d(0.69f,-0.38f);
    glVertex2d(0.71f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.7,-0.2);
    glVertex2f(0.7,-0.4);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.72f,-0.1f);
    glVertex2d(0.71f,-0.38f);
    glVertex2d(0.73f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.72,-0.2);
    glVertex2f(0.72,-0.4);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.74f,-0.1f);
    glVertex2d(0.73f,-0.38f);
    glVertex2d(0.75f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.74,-0.2);
    glVertex2f(0.74,-0.4);
    glEnd();

        //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.76f,-0.1f);
    glVertex2d(0.75f,-0.38f);
    glVertex2d(0.77f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.76,-0.2);
    glVertex2f(0.76,-0.4);
    glEnd();

            //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.78f,-0.1f);
    glVertex2d(0.77f,-0.38f);
    glVertex2d(0.79f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.78,-0.2);
    glVertex2f(0.78,-0.4);
    glEnd();

                //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.8f,-0.1f);
    glVertex2d(0.79f,-0.38f);
    glVertex2d(0.81f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.8,-0.2);
    glVertex2f(0.8,-0.4);
    glEnd();

                    //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.82f,-0.1f);
    glVertex2d(0.81f,-0.38f);
    glVertex2d(0.83f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.82,-0.2);
    glVertex2f(0.82,-0.4);
    glEnd();

                        //8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.84f,-0.1f);
    glVertex2d(0.83f,-0.38f);
    glVertex2d(0.85f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.84,-0.2);
    glVertex2f(0.84,-0.4);
    glEnd();

//9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.86f,-0.1f);
    glVertex2d(0.85f,-0.38f);
    glVertex2d(0.87f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.86,-0.2);
    glVertex2f(0.86,-0.4);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.88f,-0.1f);
    glVertex2d(0.87f,-0.38f);
    glVertex2d(0.89f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.88,-0.2);
    glVertex2f(0.88,-0.4);
    glEnd();



//Corn Field Backward 1_________________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.67f,-0.0f);
    glVertex2d(0.66f,-0.24f);
    glVertex2d(0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.67f,-0.1f);
    glVertex2f(0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.69f,-0.0f);
    glVertex2d(0.68f,-0.24f);
    glVertex2d(0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.69f,-0.1f);
    glVertex2f(0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.71f,-0.0f);
    glVertex2d(0.7f,-0.24f);
    glVertex2d(0.72f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.71f,-0.1f);
    glVertex2f(0.71f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.73f,-0.0f);
    glVertex2d(0.72f,-0.24f);
    glVertex2d(0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.73f,-0.1f);
    glVertex2f(0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.75f,-0.0f);
    glVertex2d(0.74f,-0.24f);
    glVertex2d(0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.75f,-0.1f);
    glVertex2f(0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.77f,-0.0f);
    glVertex2d(0.76f,-0.24f);
    glVertex2d(0.78f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.77f,-0.1f);
    glVertex2f(0.77f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.79f,-0.0f);
    glVertex2d(0.78f,-0.24f);
    glVertex2d(0.8f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.79f,-0.1f);
    glVertex2f(0.79f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.81f,-0.0f);
    glVertex2d(0.8f,-0.24f);
    glVertex2d(0.82f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.81f,-0.1f);
    glVertex2f(0.81f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.83f,-0.0f);
    glVertex2d(0.82f,-0.24f);
    glVertex2d(0.84f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.83f,-0.1f);
    glVertex2f(0.83f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.85f,-0.0f);
    glVertex2d(0.84f,-0.24f);
    glVertex2d(0.86f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.85f,-0.1f);
    glVertex2f(0.85f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.87f,-0.0f);
    glVertex2d(0.86f,-0.24f);
    glVertex2d(0.88f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.87f,-0.1f);
    glVertex2f(0.87f,-0.26f);
    glEnd();

//__________________ Random Tree __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.78f,0.24f);
    glVertex2d(-0.76f,0.1f);
    glVertex2d(-0.8f,0.1f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.78f,0.16f);
    glVertex2f(-0.78f,0.05f);
    glEnd();

    //2
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.88f,0.3f);
    glVertex2d(-0.86f,0.15f);
    glVertex2d(-0.9f,0.15f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.88f,0.26f);
    glVertex2f(-0.88f,0.09f);
    glEnd();

    //3
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.58f,0.2f);
    glVertex2d(-0.56f,0.05f);
    glVertex2d(-0.6f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.58f,0.16f);
    glVertex2f(-0.58f,0.0f);
    glEnd();

    //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.38f,0.2f);
    glVertex2d(-0.36f,0.05f);
    glVertex2d(-0.4f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.38f,0.16f);
    glVertex2f(-0.38f,0.0f);
    glEnd();

    // Part 2

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.67f,-0.0f);
    glVertex2d(-0.66f,-0.24f);
    glVertex2d(-0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.67f,-0.1f);
    glVertex2f(-0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(-0,102,0);
    glVertex2d(-0.69f,-0.0f);
    glVertex2d(-0.68f,-0.24f);
    glVertex2d(-0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.69f,-0.1f);
    glVertex2f(-0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.31f,-0.0f);
    glVertex2d(-0.3f,-0.24f);
    glVertex2d(-0.32f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.31f,-0.1f);
    glVertex2f(-0.31f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.73f,-0.0f);
    glVertex2d(-0.72f,-0.24f);
    glVertex2d(-0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.73f,-0.1f);
    glVertex2f(-0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.75f,-0.0f);
    glVertex2d(-0.74f,-0.24f);
    glVertex2d(-0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.75f,-0.1f);
    glVertex2f(-0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.47f,-0.0f);
    glVertex2d(-0.46f,-0.24f);
    glVertex2d(-0.48f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.47f,-0.1f);
    glVertex2f(-0.47f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.96f,-0.0f);
    glVertex2d(-0.95f,-0.24f);
    glVertex2d(-0.97f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.96f,-0.1f);
    glVertex2f(-0.96f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.11f,-0.0f);
    glVertex2d(-0.1f,-0.24f);
    glVertex2d(-0.12f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.11f,-0.1f);
    glVertex2f(-0.11f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.05f,-0.1f);
    glVertex2d(0.04f,-0.24f);
    glVertex2d(0.06f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.05f,-0.15f);
    glVertex2f(0.05f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.15f,-0.07f);
    glVertex2d(-0.14f,-0.24f);
    glVertex2d(-0.16f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.15f,-0.1f);
    glVertex2f(-0.15f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.17f,-0.0f);
    glVertex2d(-0.16f,-0.24f);
    glVertex2d(-0.18f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.17f,-0.1f);
    glVertex2f(-0.17f,-0.26f);
    glEnd();

//_________ Middle Corn Field __________

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.68f,-0.1f);
    glVertex2d(0.67f,-0.34f);
    glVertex2d(0.69f,-0.34f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.68f,-0.2f);
    glVertex2f(0.68f,-0.36f);
    glEnd();








//house_________________________________________________

//a
 glBegin(GL_QUADS);
	glColor3f(1.78f, 1.74f,0.73f);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.55f, -0.65f);

	glVertex2f(-0.55f, -0.5f);
	glVertex2f(-0.75f, -0.5f);
	glEnd();

//b
 glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.78f, -0.68f);

	glVertex2f(-0.52f, -0.68f);
	glVertex2f(-0.55f, -0.65f);
	glEnd();


//c
glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.77,-0.5);
    glVertex2f(-0.53,-0.5);
    glVertex2f(-0.65,-0.42);

    glEnd();

 //d
 glBegin(GL_QUADS);
	glColor3f(1.00f, 0.0f,0.0f);

	glVertex2f(-0.68f, -0.65f);
	glVertex2f(-0.62f, -0.65f);

	glVertex2f(-0.62f, -0.55f);
	glVertex2f(-0.68f, -0.55f);
	glEnd();




    //h0use small
    //a


		glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.25f, -0.5f);

	glVertex2f(-0.25f, -0.35f);
	glVertex2f(-0.45f, -0.35f);
	glEnd();


	//b
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.5,-0.35);
    glVertex2f(-0.2,-0.35);
    glVertex2f(-0.35,-0.25);

    glEnd();

//c
glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.5f, -0.55f);

	glVertex2f(-0.2f, -0.55f);
	glVertex2f(-0.25f, -0.5f);
	glEnd();

	//d
	glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);
	glVertex2f(-0.38f, -0.5f);
	glVertex2f(-0.32f, -0.5f);

	glVertex2f(-0.32f, -0.42f);
	glVertex2f(-0.38f, -0.42f);
	glEnd();

	//road big house
	glBegin(GL_QUADS);
	glColor3f(0.92f, 0.53f, 0.17f);

	glVertex2f(-0.8f, -1.0f);
	glVertex2f(-0.7f, -1.0f);

	glVertex2f(-0.6f, -0.75f);
	glVertex2f(-0.7f, -0.75f);
	glEnd();

	//house 3
	//a
	glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.75f, -0.25f);
	glVertex2f(-0.75f, -0.35f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.55f, -0.25f);
	glEnd();

//b

glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.8f, -0.4f);
	glVertex2f(-0.5f, -0.4f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.75f, -0.35f);
	glEnd();

	//c
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.8,-0.25);
    glVertex2f(-0.5,-0.25);
    glVertex2f(-0.65,-0.18);

    glEnd();

    //d
    glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);

	glVertex2f(-0.68f, -0.35f);
	glVertex2f(-0.62f, -0.35f);

	glVertex2f(-0.62f, -0.26f);
	glVertex2f(-0.68f, -0.26f);
	glEnd();





//____________________ Tree ____________________ Faysal (20-43800-2)____________________

    GLfloat p9= -0.9f; GLfloat q9= -0.4f; GLfloat r9 = 0.12f;
    int tringle9=40;

    GLfloat tp9 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p9,q9);
    for(int i= 0;i<=tringle9; i++)
    {
        glVertex2f (p9+(r9*cos(i*tp9/tringle9)),
                    q9+(r9*sin(i*tp9/tringle9))
                    );


    }
    glEnd();

    GLfloat p10= -0.9f; GLfloat q10= -0.3f; GLfloat r10 = 0.10f;
    int tringle10=40;

    GLfloat tp10 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p10,q10);
    for(int i= 0;i<=tringle10; i++)
    {
        glVertex2f (p10+(r10*cos(i*tp10/tringle10)),
                    q10+(r10*sin(i*tp10/tringle10))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.9,-0.7);
    glVertex2f(-0.9,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.95,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.85,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();


    //Tree 2
    GLfloat p11= -0.1f; GLfloat q11= -0.4f; GLfloat r11 = 0.12f;
    int tringle11=40;

    GLfloat tp11 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p11,q11);
    for(int i= 0;i<=tringle11; i++)
    {
        glVertex2f (p11+(r11*cos(i*tp11/tringle11)),
                    q11+(r11*sin(i*tp11/tringle11))
                    );


    }
    glEnd();

    GLfloat p12= -0.1f; GLfloat q12= -0.3f; GLfloat r12 = 0.10f;
    int tringle12=40;

    GLfloat tp12 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p12,q12);
    for(int i= 0;i<=tringle12; i++)
    {
        glVertex2f (p12+(r12*cos(i*tp12/tringle12)),
                    q12+(r12*sin(i*tp12/tringle12))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.1,-0.7);
    glVertex2f(-0.1,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.2,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(0.0,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();





//Front River_________________________
//River Line
//1

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.125f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glEnd();



 //2

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.195f,-1.0f);
 glEnd();



//3

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.31f,-0.25f);
 glVertex2f(0.405f,-0.70f);
 glEnd();



//4

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(1.0f,-0.7f);
 glEnd();


 //5

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(-1.0f,-0.7f);
 glEnd();






//Front Fountain____________________
//1 : Attached

 glBegin(GL_QUADS);
 glColor3ub(30,144,255);
 glVertex2f(0.26f,-0.06f);
 glVertex2f(0.10f,-0.05f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.32f,-0.25f);
 glEnd();


// Fountain Stream___________________________________________________________code : 2092 to 2126___________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.08f);
glVertex2d(0.17f ,-0.2f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.1f);
glVertex2d(0.21f ,-0.2f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.13f);
glVertex2d(0.14f ,-0.23f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.18f ,-0.17f);
glVertex2d(0.189f ,-0.23f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.13f);
glVertex2d(0.27f ,-0.19f);
glEnd();



//River Water____________________
//1 : Attached

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(0.32f,-0.25f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.20f,-1.0f);
 glVertex2f(0.40f,-0.70f);

 glEnd();


 // 1.River Stream____________________________________________code : 2144 to 2192_________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.6f);
glVertex2d(0.17f ,-0.67f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.4f);
glVertex2d(0.21f ,-0.45f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.43f);
glVertex2d(0.14f ,-0.48f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.53f);
glVertex2d(0.32f ,-0.57f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.63f);
glVertex2d(0.27f ,-0.69f);
glEnd();




//2

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(1.0f,-0.7f);
 glVertex2f(-1.0f,-0.7f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


  // 2.River Stream____________________________________________code : 2195 to 2238__________________________Animation added x horizontally________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.1f ,-0.8f);
glVertex2d(0.2f ,-0.8f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.1f ,-0.9f);
glVertex2d(-0.21f ,-0.9f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.93f);
glVertex2d(0.4f ,-0.937f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.8f ,-0.83f);
glVertex2d(-0.9f ,-0.836f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.5f ,-0.85f);
glVertex2d(0.6f ,-0.86f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.6f ,-0.91f);
glVertex2d(-0.7f ,-0.92f);
glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 01
//1

    GLfloat p011=0.295f; GLfloat q011= -0.26f; GLfloat r011 = 0.028f;
    int tringle011=40;

    GLfloat tp011 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p011,q011);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p011+(r011*cos(i*tp011/tringle011)),
                    q011+(r011*sin(i*tp011/tringle011))
                    );
    }

 glEnd ();


//2

     GLfloat p012=0.25f; GLfloat q012= -0.26f; GLfloat r012 = 0.025f;
    int tringle012=40;

    GLfloat tp012 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p012,q012);
    for(int i= 0;i<=tringle012; i++)
    {
        glVertex2f (
                    p012+(r012*cos(i*tp012/tringle012)),
                    q012+(r012*sin(i*tp012/tringle012))
                    );
    }

 glEnd ();


//3

    GLfloat p013=0.2f; GLfloat q013= -0.26f; GLfloat r013 = 0.028f;
    int tringle013=40;

    GLfloat tp013 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p013,q013);
    for(int i= 0;i<=tringle013; i++)
    {
        glVertex2f (
                    p013+(r013*cos(i*tp013/tringle013)),
                    q013+(r013*sin(i*tp013/tringle013))
                    );
    }

 glEnd ();


//4

    GLfloat p014=0.155f; GLfloat q014= -0.26f; GLfloat r014 = 0.036f;
    int tringle014=40;

    GLfloat tp014 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p014,q014);
    for(int i= 0;i<=tringle014; i++)
    {
        glVertex2f (
                    p014+(r014*cos(i*tp014/tringle014)),
                    q014+(r014*sin(i*tp014/tringle014))
                    );
    }

 glEnd ();









//Stick_______________________________

glLineWidth(4.5);
glBegin(GL_LINES);
glColor3ub(139,69,19);
glVertex2d(-0.328f,-0.69f);
glVertex2d(-0.328f,-0.61f);
glEnd();







//Barrier boat______________________________

glBegin(GL_QUADS);
glColor3ub(128,0,0);
glVertex2d(-0.1f,-0.71f);
glVertex2d(-0.3f,-0.71f);
glVertex2d(-0.24f,-0.76f);
glVertex2d(-0.16f,-0.76f);
glEnd();

//Rope
//1
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.33f,-0.65f);
glVertex2d(-0.28f,-0.71f);
glEnd();

//2
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.28f,-0.71f);
glVertex2d(-0.287f,-0.72f);
glEnd();


//load
//front

glBegin(GL_QUADS);
glColor3ub(184,134,12);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.16f,-0.68f);
glVertex2d(-0.15f,-0.71f);
glVertex2d(-0.23f,-0.71f);
glEnd();

//back

glBegin(GL_TRIANGLES);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.24f,-0.71f);
glVertex2d(-0.22f,-0.71f);
glEnd();




//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();

    //__________________ Boat __________________ Faysal (20-43800-2)__________________

glPushMatrix();
glTranslated(position_Boat,0.0f,0.0f);

glBegin(GL_POLYGON);
glColor3f(0.0f,0.0f,0.0f);
glVertex2d(0.4f,-0.78f);
glVertex2d(0.49f,-0.85f);
glVertex2d(0.61f,-0.85f);
glVertex2d(0.7f,-0.78f);
glEnd();

    glLineWidth(1.5f);
    glBegin(GL_LINES);
    glColor3ub(0.0f, 0.0f, 0.0f);
    glVertex2f(0.55,-0.78);
    glVertex2f(0.55,-0.5);
    glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.545f,-0.45f);
glVertex2d(0.47f,-0.77f);
glVertex2d(0.545f,-0.77f);
glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.555f,-0.45f);
glVertex2d(0.65f,-0.77f);
glVertex2d(0.555f,-0.77f);
glEnd();








//Boat___________________________________




glBegin(GL_QUADS);
glColor3f(0.5,0.0f,0.0f);
glVertex2d(0.3f,-0.87f);
glVertex2d(0.5f,-0.87f);
glVertex2d(0.44f,-0.92f);
glVertex2d(0.36f,-0.92f);
glEnd();


//load

glBegin(GL_QUADS);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(0.46f,-0.85f);
glVertex2d(0.38f,-0.85f);
glVertex2d(0.38f,-0.87f);
glVertex2d(0.46f,-0.87f);
glEnd();


//stick
//1

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.87f);
glVertex2d(0.44f,-0.77f);
glEnd();


//2

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.87f);
glVertex2d(0.43f,-0.77f);
glEnd();


//3

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.87f);
glVertex2d(0.4f,-0.81f);
glEnd();


//Flag
//1
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.77f);
glVertex2d(0.48f,-0.84f);
glVertex2d(0.44f,-0.83f);
glEnd();

//2
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.77f);
glVertex2d(0.39f,-0.84f);
glVertex2d(0.43f,-0.83f);
glEnd();


//3

glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.81f);
glVertex2d(0.37f,-0.85f);
glVertex2d(0.4f,-0.84f);
glEnd();
glPopMatrix();






glFlush();












//Rain___________________________________________________



           glPushMatrix();  // Duplicates current matrix down by one

    glTranslatef(position9,position8,0.0f);
    glColor3ub(174,214,241);
    glLineWidth(2);

    glBegin(GL_LINES);

        glVertex2f(-.85,1.9);glVertex2f(-.8,1.8);
    glVertex2f(-.55,1.9);glVertex2f(-.5,1.8);
    glVertex2f(-.25,1.9);glVertex2f(-.2,1.8);
            glVertex2f(.05,1.9);glVertex2f(.1,1.8);
            glVertex2f(.35,1.9);glVertex2f(.4,1.8);
            glVertex2f(.65,1.9);glVertex2f(.7,1.8);
            glVertex2f(.95,1.9);glVertex2f(1.0,1.8);

     glVertex2f(-1.0,1.6);glVertex2f(-.95,1.5);
    glVertex2f(-.7,1.6);glVertex2f(-.65,1.5);
    glVertex2f(-.4,1.6);glVertex2f(-.35,1.5);
    glVertex2f(-.1,1.6);glVertex2f(-.05,1.5);
            glVertex2f(.2,1.6);glVertex2f(.25,1.5);
            glVertex2f(.5,1.6);glVertex2f(.55,1.5);
            glVertex2f(.8,1.6);glVertex2f(.85,1.5);


    glVertex2f(-.85,1.3);glVertex2f(-.8,1.2);
    glVertex2f(-.55,1.3);glVertex2f(-.5,1.2);
    glVertex2f(-.25,1.3);glVertex2f(-.2,1.2);
             glVertex2f(.05,1.3);glVertex2f(.1,1.2);
            glVertex2f(.35,1.3);glVertex2f(.4,1.2);
            glVertex2f(.65,1.3);glVertex2f(.7,1.2);
            glVertex2f(.95,1.3);glVertex2f(1.0,1.2);

    glVertex2f(-1.0,1.0);glVertex2f(-.95,.9);
    glVertex2f(-.7,1.0);glVertex2f(-.65,0.9);
    glVertex2f(-.4,1.0);glVertex2f(-.35,0.9);
    glVertex2f(-.1,1.0);glVertex2f(-.05,0.9);
                 glVertex2f(.2,1.0);glVertex2f(.25,.9);
                 glVertex2f(.5,1.0);glVertex2f(.55,0.9);
                 glVertex2f(.8,1.0);glVertex2f(.85,0.9);



    glVertex2f(-.85,.7);glVertex2f(-.8,.6);
    glVertex2f(-.55,.7);glVertex2f(-.5,0.6);
    glVertex2f(-.25,.7);glVertex2f(-.2,0.6);
              glVertex2f(.05,.7);glVertex2f(.1,.6);
            glVertex2f(.35,.7);glVertex2f(.4,.6);
            glVertex2f(.65,.7);glVertex2f(.7,.6);
            glVertex2f(.95,.7);glVertex2f(1.0,.6);

    glVertex2f(-1.0,.4);glVertex2f(-.95,.3);
    glVertex2f(-.7,.4);glVertex2f(-.65,0.3);
    glVertex2f(-.4,.4);glVertex2f(-.35,0.3);
    glVertex2f(-.1,.4);glVertex2f(-.05,0.3);
                 glVertex2f(.2,.4);glVertex2f(.25,.3);
                 glVertex2f(.5,.4);glVertex2f(.55,0.3);
                 glVertex2f(.8,.40);glVertex2f(.85,0.3);

    glVertex2f(-.85,.1);glVertex2f(-.8,0.0);
    glVertex2f(-.55,.1);glVertex2f(-.5,0.0);
    glVertex2f(-.25,.1);glVertex2f(-.2,0.0);
              glVertex2f(.05,.1);glVertex2f(.1,.0);
            glVertex2f(.35,.1);glVertex2f(.4,.0);
            glVertex2f(.65,.1);glVertex2f(.7,.0);
            glVertex2f(.95,.1);glVertex2f(1.0,.0);


    glVertex2f(-1.0,-.2);glVertex2f(-.95,-.3);
    glVertex2f(-.7,-.2);glVertex2f(-.65,-0.3);
    glVertex2f(-.4,-.2);glVertex2f(-.35,-0.3);
    glVertex2f(-.1,-.2);glVertex2f(-.05,-0.3);
                 glVertex2f(.2,-.2);glVertex2f(.25,-.3);
                 glVertex2f(.5,-.2);glVertex2f(.55,-.3);
                 glVertex2f(.8,-.2);glVertex2f(.85,-.3);

    glVertex2f(-.85,-.5);glVertex2f(-.8,-.6);
    glVertex2f(-.55,-.5);glVertex2f(-.5,-.6);
    glVertex2f(-.25,-.5);glVertex2f(-.2,-.6);
              glVertex2f(.05,-.5);glVertex2f(.1,-.6);
            glVertex2f(.35,-.5);glVertex2f(.4,-.6);
            glVertex2f(.65,-.5);glVertex2f(.7,-.6);
            glVertex2f(.95,-.5);glVertex2f(1.0,-.6);

    glVertex2f(-1.0,-.8);glVertex2f(-.95,-.9);
    glVertex2f(-.7,-.8);glVertex2f(-.65,-0.9);
    glVertex2f(-.4,-.8);glVertex2f(-.35,-0.9);
    glVertex2f(-.1,-.8);glVertex2f(-.05,-0.9);
                 glVertex2f(.2,-.8);glVertex2f(.25,-.9);
                 glVertex2f(.5,-.8);glVertex2f(.55,-.9);
                 glVertex2f(.8,-.8);glVertex2f(.85,-.9);

    glVertex2f(-.85,-1.1);glVertex2f(-.8,-1.2);
    glVertex2f(-.55,-1.1);glVertex2f(-.5,-1.2);
    glVertex2f(-.25,-1.1);glVertex2f(-.2,-1.2);
              glVertex2f(.05,-1.1);glVertex2f(.1,-1.2);
            glVertex2f(.35,-1.1);glVertex2f(.4,-1.2);
            glVertex2f(.65,-1.1);glVertex2f(.7,-1.2);
            glVertex2f(.95,-1.1);glVertex2f(1.0,-1.2);

    glVertex2f(-1.0,-1.4);glVertex2f(-.95,-1.5);
    glVertex2f(-.7,-1.4);glVertex2f(-.65,-1.5);
    glVertex2f(-.4,-1.4);glVertex2f(-.35,-1.5);
    glVertex2f(-.1,-1.4);glVertex2f(-.05,-1.5);
                 glVertex2f(.2,-1.4);glVertex2f(.25,-1.5);
                 glVertex2f(.5,-1.4);glVertex2f(.55,-1.5);
                 glVertex2f(.8,-1.4);glVertex2f(.85,-1.5);


        glEnd();

    glLoadIdentity();

    glPopMatrix();


    glutTimerFunc(5000,display_winterDay,0);
     Idle();


glFlush();
}



///_________________________________________________________________________________________Winter_____________________________________________________________________________________________________


void snow(float a, float b, float r){

    int i;
    int triangleAmount = 100;
    GLfloat twicePi = 2.0f * PI;
    GLfloat x=a; GLfloat y=b; GLfloat radius =r;
       glBegin(GL_TRIANGLE_FAN);
       glVertex2f(x, y);
		for(i = 0; i <= triangleAmount;i++) {
			glVertex2f(
                x + (radius * cos(i *  twicePi / triangleAmount)),
			    y + (radius * sin(i * twicePi / triangleAmount))
			);
		}

		glEnd();


}

void winter()
{
    // Display____________________________
glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);


//Sky___________________________
	glBegin(GL_POLYGON);
	if(night==true)

       {
       glColor3ub(19,24,98);

       }

       else
	glColor3ub(202, 237, 236);

	glVertex2f(-1.0f, 1.0f);
	glVertex2f(-1.0f, -1.0f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(1.0f, 1.0f);
	  glEnd();









//cloud__________________________________________________________
//Serial : 0


glPushMatrix();
glTranslated(position_cloud,0.0f,0.0f);
    GLfloat p01=-0.8f; GLfloat q01=0.7f; GLfloat r01 = 0.06f;
    int tringle01=40;

    GLfloat tp01 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p01,q01);
    for(int i= 0;i<=tringle01; i++)
    {
        glVertex2f (
                    p01+(r01*cos(i*tp01/tringle01)),
                    q01+(r01*sin(i*tp01/tringle01))
                    );


    }

 glEnd ();

//left 2

     GLfloat p31=-0.75f; GLfloat q31=0.75f; GLfloat r31 = 0.06f;
    int tringle31=40;

    GLfloat tp31 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p31,q31);
    for(int i= 0;i<=tringle31; i++)
    {
        glVertex2f (
                    p31+(r31*cos(i*tp31/tringle31)),
                    q31+(r31*sin(i*tp31/tringle31)));



    }

 glEnd ();

//left 3

     GLfloat p32=-0.69f; GLfloat q32=0.75f; GLfloat r32 = 0.07f;
    int tringle32=40;

    GLfloat tp32 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p32,q32);
    for(int i= 0;i<=tringle32; i++)
    {
        glVertex2f (
                    p32+(r32*cos(i*tp32/tringle32)),
                    q32+(r32*sin(i*tp32/tringle32))
                    );


    }

 glEnd ();


//left 4

GLfloat p33=-0.75f; GLfloat q33=0.7f; GLfloat r33 = 0.07f;
    int tringle33=40;

    GLfloat tp33 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p33,q33);
    for(int i= 0;i<=tringle33; i++)
    {
        glVertex2f (
                    p33+(r33*cos(i*tp33/tringle33)),
                    q33+(r33*sin(i*tp33/tringle33))
                    );


    }

 glEnd ();



    GLfloat p34=0.8f; GLfloat q34=0.7f; GLfloat r34 = 0.06f;
    int tringle34=40;

    GLfloat tp34 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p34,q34);
    for(int i= 0;i<=tringle34; i++)
    {
        glVertex2f (
                    p34+(r34*cos(i*tp34/tringle34)),
                    q34+(r34*sin(i*tp34/tringle34))
                    );


    }

 glEnd ();

//left 2

     GLfloat p35=0.75f; GLfloat q35=0.75f; GLfloat r35 = 0.06f;
    int tringle35=40;

    GLfloat tp35 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p35,q35);
    for(int i= 0;i<=tringle35; i++)
    {
        glVertex2f (
                    p35+(r35*cos(i*tp35/tringle35)),
                    q35+(r35*sin(i*tp35/tringle35)));



    }

 glEnd ();

//left 3

     GLfloat p36=0.69f; GLfloat q36=0.75f; GLfloat r36 = 0.07f;
    int tringle36=40;

    GLfloat tp36 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p36,q36);
    for(int i= 0;i<=tringle36; i++)
    {
        glVertex2f (
                    p36+(r36*cos(i*tp36/tringle36)),
                    q36+(r36*sin(i*tp36/tringle36))
                    );


    }

 glEnd ();

//left 4

GLfloat p37=0.75f; GLfloat q37=0.7f; GLfloat r37 = 0.07f;
    int tringle37=40;

    GLfloat tp37 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p37,q37);
    for(int i= 0;i<=tringle37; i++)
    {
        glVertex2f (
                    p37+(r37*cos(i*tp37/tringle37)),
                    q37+(r37*sin(i*tp37/tringle37))
                    );


    }

 glEnd ();


    GLfloat p38=0.4f; GLfloat q38=0.75f; GLfloat r38 = 0.06f;
    int tringle38=40;

    GLfloat tp38 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p38,q38);
    for(int i= 0;i<=tringle38; i++)
    {
        glVertex2f (
                    p38+(r38*cos(i*tp38/tringle38)),
                    q38+(r38*sin(i*tp38/tringle38))
                    );


    }

 glEnd ();

//left 2

     GLfloat p39=0.35f; GLfloat q39=0.8f; GLfloat r39 = 0.06f;
    int tringle39=40;

    GLfloat tp39 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p39,q39);
    for(int i= 0;i<=tringle39; i++)
    {
        glVertex2f (
                    p39+(r39*cos(i*tp39/tringle39)),
                    q39+(r39*sin(i*tp39/tringle39)));



    }

 glEnd ();

//left 3

     GLfloat p40=0.29f; GLfloat q40=0.8f; GLfloat r40= 0.07f;
    int tringle40=40;

    GLfloat tp40 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p40,q40);
    for(int i= 0;i<=tringle40; i++)
    {
        glVertex2f (
                    p40+(r40*cos(i*tp40/tringle40)),
                    q40+(r40*sin(i*tp40/tringle40))
                    );


    }

 glEnd ();

//left 4

GLfloat p41=0.35f; GLfloat q41=0.75f; GLfloat r41 = 0.07f;
    int tringle41=40;

    GLfloat tp41 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p41,q41);
    for(int i= 0;i<=tringle41; i++)
    {
        glVertex2f (
                    p41+(r41*cos(i*tp41/tringle41)),
                    q41+(r41*sin(i*tp41/tringle41))
                    );


    }


 glEnd ();
glPopMatrix();









// Hill______________________________

//1......
//Left : Front Side

glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);

   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-1.0f , 0.0f);
   glEnd();



//Left : Back Side

glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);

   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-0.30f , 0.0f);
   glEnd();


//snow hill
glBegin(GL_TRIANGLES);
     glColor3ub(255, 250, 240);
     glVertex2f(-0.415f , 0.4f);
     glVertex2f(-0.55f, 0.60f);
     glVertex2f(-0.7f , 0.4f);
     glEnd();


//2......
//Right : Front Side
glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);

   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(1.0f , 0.0f);
   glEnd();



//Right : Back Side
glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);

   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(0.30f , 0.0f);
   glEnd();



//snow hill
glBegin(GL_TRIANGLES);
     glColor3ub(255, 250, 240);
     glVertex2f(0.437f , 0.42f);
     glVertex2f(0.56f, 0.60f);
     glVertex2f(0.695f , 0.42f);
     glEnd();

//3......
//Center : Front Side

glBegin(GL_POLYGON);
   glColor3f(1.0f, 0.5f, 0.0f);

   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.05f, 0.53f);
   glVertex2f(-0.01f, 0.55f);
   glVertex2f(0.35f , 0.0f);
   glEnd();


//snow hill
glBegin(GL_POLYGON);
     glColor3ub(255, 250, 240);
   glVertex2f(-0.26f , 0.35f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.05f, 0.53f);
   glVertex2f(-0.01f, 0.55f);
   glVertex2f(0.15f , 0.31f);
   glEnd();

/*
//Center : Back Side

glBegin(GL_TRIANGLES);
   glColor3f(0.9f, 0.45f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.35f , 0.0f);
   glEnd();

*/


//Fountain______________________

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(-0.04f, 0.535f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.13f, 0.0f);
   glVertex2f(0.06f , 0.0f);
   glEnd();



//Fountain Stream____________________________________________________________//Code no 614 - 700 ........animation added Y vertically___________________________________
//1



glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.06f, 0.5f);
   glVertex2f(-0.056f, 0.53f);
   glVertex2f(-0.06f, 0.46f);
   glVertex2f(-0.05f , 0.3f);
   glEnd();



//2

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.088f, 0.5f);
   glVertex2f(-0.086f, 0.53f);
   glVertex2f(-0.088f, 0.46f);
   glVertex2f(-0.08f , 0.3f);
   glEnd();



//3

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.027f, 0.4f);
   glVertex2f(-0.02f, 0.33f);
   glVertex2f(-0.023f, 0.36f);
   glVertex2f(-0.02f , 0.2f);
   glEnd();



//4

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.074f, 0.3f);
   glVertex2f(-0.07f, 0.33f);
   glVertex2f(-0.072f, 0.26f);
   glVertex2f(-0.07f , 0.2f);
   glEnd();



//5

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.014f, 0.15f);
   glVertex2f(-0.01f, 0.1f);
   glVertex2f(-0.015f, 0.12f);
   glVertex2f(-0.012f , 0.01f);
   glEnd();



//6

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.095f, 0.15f);
   glVertex2f(-0.094f, 0.1f);
   glVertex2f(-0.092f, 0.12f);
   glVertex2f(-0.09f , 0.01f);
   glEnd();



//7

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.064f, 0.15f);
   glVertex2f(-0.062f, 0.1f);
   glVertex2f(-0.06f, 0.12f);
   glVertex2f(-0.057f , 0.01f);
   glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 00
//1

    GLfloat p001=0.04f; GLfloat q001= -0.01f; GLfloat r001 = 0.031f;
    int tringle001=40;

    GLfloat tp001 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p001,q001);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p001+(r001*cos(i*tp001/tringle001)),
                    q001+(r001*sin(i*tp001/tringle001))
                    );
    }

 glEnd ();


//2

     GLfloat p002=0.0f; GLfloat q002= -0.01f; GLfloat r002 = 0.023f;
    int tringle002=40;

    GLfloat tp002 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p002,q002);
    for(int i= 0;i<=tringle002; i++)
    {
        glVertex2f (
                    p002+(r002*cos(i*tp002/tringle002)),
                    q002+(r002*sin(i*tp002/tringle002))
                    );
    }

 glEnd ();


//3

    GLfloat p003=-0.02f; GLfloat q003= -0.01f; GLfloat r003 = 0.028f;
    int tringle003=40;

    GLfloat tp003 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p003,q003);
    for(int i= 0;i<=tringle003; i++)
    {
        glVertex2f (
                    p003+(r003*cos(i*tp003/tringle003)),
                    q003+(r003*sin(i*tp003/tringle003))
                    );
    }

 glEnd ();


//4

    GLfloat p004=-0.07f; GLfloat q004= -0.01f; GLfloat r004 = 0.036f;
    int tringle004=40;

    GLfloat tp004 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p004,q004);
    for(int i= 0;i<=tringle004; i++)
    {
        glVertex2f (
                    p004+(r004*cos(i*tp004/tringle004)),
                    q004+(r004*sin(i*tp004/tringle004))
                    );
    }

 glEnd ();


//5

    GLfloat p005=-0.115f; GLfloat q005= -0.01f; GLfloat r005 = 0.022f;
    int tringle005=40;

    GLfloat tp005 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p005,q005);
    for(int i= 0;i<=tringle005; i++)
    {
        glVertex2f (
                    p005+(r005*cos(i*tp005/tringle005)),
                    q005+(r005*sin(i*tp005/tringle005))
                    );
    }

 glEnd ();







//Path________________________
//including with hill

 glBegin(GL_QUADS);
 glColor3ub(45,107,47);
 glVertex2f(1.0f,0.0f);
 glVertex2f(-1.0f,0.0f);
 glVertex2f(-1.0f,-0.50f);
 glVertex2f(1.0f,-.50f);
 glEnd();


//River________________________
//include with fountain
//River Line
//1

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(-0.14f,0.0f);
 glVertex2f(-0.04f,-0.50f);
 glEnd();



 //2

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.07f,0.0f);
 glVertex2f(0.055f,-0.30f);
 glEnd();



 //River Water

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(0.07f , 0.0f);
   glVertex2f(-0.14f, 0.0f);
   glVertex2f(-0.05f,-0.50f);
   glVertex2f(0.05f,-0.50f);
   glEnd();



//River Stream_______________________________________________code 872 to 892_______________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.09f ,-0.05f);
glVertex2d(-0.09f ,-0.1f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.03f ,-0.02f);
glVertex2d(0.03f ,-0.1f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.03f ,-0.02f);
glVertex2d(-0.035f ,-0.1f);
glEnd();




//Back Green hill_____________________________________________
//Serial : normal digit
//1
//Left


    GLfloat p1=-0.70f; GLfloat q1= -0.1f; GLfloat r1 = 0.4f;
    int tringle1=40;

    GLfloat tp1 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p1,q1);
    for(int i= 0;i<=tringle1; i++)
    {
        glVertex2f (
                    p1+(r1*cos(i*tp1/tringle1)),
                    q1+(r1*sin(i*tp1/tringle1))
                    );


    }

 glEnd ();






//2
//Right


    GLfloat p2=0.70f; GLfloat q2= -0.1f; GLfloat r2 = 0.4f;
    int tringle2=40;

    GLfloat tp2 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p2,q2);
    for(int i= 0;i<=tringle2; i++)
    {
        glVertex2f (
                    p2+(r2*cos(i*tp2/tringle2)),
                    q2+(r2*sin(i*tp2/tringle2))
                    );


    }

 glEnd ();





//Center Green hill1______________________________________________
//Serial : normal digit
//1
//Left

 GLfloat p4=-0.95f; GLfloat q4= -0.22f; GLfloat r4 = 0.35f;
    int tringle4=40;

    GLfloat tp4 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p4,q4);
    for(int i= 0;i<=tringle4; i++)
    {
        glVertex2f (
                    p4+(r4*cos(i*tp4/tringle4)),
                    q4+(r4*sin(i*tp4/tringle4))
                    );


    }

 glEnd ();



//2

 GLfloat p5=-0.46f; GLfloat q5= -0.45f; GLfloat r5 = 0.48f;
    int tringle5=40;

    GLfloat tp5 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p5,q5);
    for(int i= 0;i<=tringle5; i++)
    {
        glVertex2f (
                    p5+(r5*cos(i*tp5/tringle5)),
                    q5+(r5*sin(i*tp5/tringle5))
                    );


    }

 glEnd ();




//3

 GLfloat p6=0.15f; GLfloat q6= -0.53f; GLfloat r6 = 0.48f;
    int tringle6=40;

    GLfloat tp6 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p6,q6);
    for(int i= 0;i<=tringle6; i++)
    {
        glVertex2f (
                    p6+(r6*cos(i*tp6/tringle6)),
                    q6+(r6*sin(i*tp6/tringle6))
                    );


    }

 glEnd ();





//4
//Right

 GLfloat p7=0.7f; GLfloat q7= -0.35f; GLfloat r7 = 0.50f;
    int tringle7=40;

    GLfloat tp7 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p7,q7);
    for(int i= 0;i<=tringle7; i++)
    {
        glVertex2f (
                    p7+(r7*cos(i*tp7/tringle7)),
                    q7+(r7*sin(i*tp7/tringle7))
                    );


    }

 glEnd ();






//Front path_________________________
//1

 glBegin(GL_QUADS);
 glColor3f(0.3f,0.7f,0.0f);
 glVertex2f(1.0f,-0.25f);
 glVertex2f(-1.0f,-0.25f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


//2

 glBegin(GL_QUADS);
 glColor3f(0.7f,0.8f,0.0f);
 glVertex2f(1.0f,-0.40f);
 glVertex2f(-1.0f,-0.40f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


 //3

 glBegin(GL_QUADS);
 glColor3f(0.8f,0.5f,0.0f);
 glVertex2f(1.0f,-0.70f);
 glVertex2f(-1.0f,-0.70f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();







//__________________ Corn Field __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.7f,-0.1f);
    glVertex2d(0.69f,-0.38f);
    glVertex2d(0.71f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.7,-0.2);
    glVertex2f(0.7,-0.4);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.72f,-0.1f);
    glVertex2d(0.71f,-0.38f);
    glVertex2d(0.73f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.72,-0.2);
    glVertex2f(0.72,-0.4);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.74f,-0.1f);
    glVertex2d(0.73f,-0.38f);
    glVertex2d(0.75f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.74,-0.2);
    glVertex2f(0.74,-0.4);
    glEnd();

        //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.76f,-0.1f);
    glVertex2d(0.75f,-0.38f);
    glVertex2d(0.77f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.76,-0.2);
    glVertex2f(0.76,-0.4);
    glEnd();

            //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.78f,-0.1f);
    glVertex2d(0.77f,-0.38f);
    glVertex2d(0.79f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.78,-0.2);
    glVertex2f(0.78,-0.4);
    glEnd();

                //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.8f,-0.1f);
    glVertex2d(0.79f,-0.38f);
    glVertex2d(0.81f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.8,-0.2);
    glVertex2f(0.8,-0.4);
    glEnd();

                    //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.82f,-0.1f);
    glVertex2d(0.81f,-0.38f);
    glVertex2d(0.83f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.82,-0.2);
    glVertex2f(0.82,-0.4);
    glEnd();

                        //8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.84f,-0.1f);
    glVertex2d(0.83f,-0.38f);
    glVertex2d(0.85f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.84,-0.2);
    glVertex2f(0.84,-0.4);
    glEnd();

//9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.86f,-0.1f);
    glVertex2d(0.85f,-0.38f);
    glVertex2d(0.87f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.86,-0.2);
    glVertex2f(0.86,-0.4);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.88f,-0.1f);
    glVertex2d(0.87f,-0.38f);
    glVertex2d(0.89f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.88,-0.2);
    glVertex2f(0.88,-0.4);
    glEnd();



//Corn Field Backward 1_________________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.67f,-0.0f);
    glVertex2d(0.66f,-0.24f);
    glVertex2d(0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.67f,-0.1f);
    glVertex2f(0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.69f,-0.0f);
    glVertex2d(0.68f,-0.24f);
    glVertex2d(0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.69f,-0.1f);
    glVertex2f(0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.71f,-0.0f);
    glVertex2d(0.7f,-0.24f);
    glVertex2d(0.72f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.71f,-0.1f);
    glVertex2f(0.71f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.73f,-0.0f);
    glVertex2d(0.72f,-0.24f);
    glVertex2d(0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.73f,-0.1f);
    glVertex2f(0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.75f,-0.0f);
    glVertex2d(0.74f,-0.24f);
    glVertex2d(0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.75f,-0.1f);
    glVertex2f(0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.77f,-0.0f);
    glVertex2d(0.76f,-0.24f);
    glVertex2d(0.78f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.77f,-0.1f);
    glVertex2f(0.77f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.79f,-0.0f);
    glVertex2d(0.78f,-0.24f);
    glVertex2d(0.8f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.79f,-0.1f);
    glVertex2f(0.79f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.81f,-0.0f);
    glVertex2d(0.8f,-0.24f);
    glVertex2d(0.82f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.81f,-0.1f);
    glVertex2f(0.81f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.83f,-0.0f);
    glVertex2d(0.82f,-0.24f);
    glVertex2d(0.84f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.83f,-0.1f);
    glVertex2f(0.83f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.85f,-0.0f);
    glVertex2d(0.84f,-0.24f);
    glVertex2d(0.86f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.85f,-0.1f);
    glVertex2f(0.85f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.87f,-0.0f);
    glVertex2d(0.86f,-0.24f);
    glVertex2d(0.88f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.87f,-0.1f);
    glVertex2f(0.87f,-0.26f);
    glEnd();

//__________________ Random Tree __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.78f,0.24f);
    glVertex2d(-0.76f,0.1f);
    glVertex2d(-0.8f,0.1f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.78f,0.16f);
    glVertex2f(-0.78f,0.05f);
    glEnd();

    //2
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.88f,0.3f);
    glVertex2d(-0.86f,0.15f);
    glVertex2d(-0.9f,0.15f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.88f,0.26f);
    glVertex2f(-0.88f,0.09f);
    glEnd();

    //3
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.58f,0.2f);
    glVertex2d(-0.56f,0.05f);
    glVertex2d(-0.6f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.58f,0.16f);
    glVertex2f(-0.58f,0.0f);
    glEnd();

    //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.38f,0.2f);
    glVertex2d(-0.36f,0.05f);
    glVertex2d(-0.4f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.38f,0.16f);
    glVertex2f(-0.38f,0.0f);
    glEnd();

    // Part 2

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.67f,-0.0f);
    glVertex2d(-0.66f,-0.24f);
    glVertex2d(-0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.67f,-0.1f);
    glVertex2f(-0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(-0,102,0);
    glVertex2d(-0.69f,-0.0f);
    glVertex2d(-0.68f,-0.24f);
    glVertex2d(-0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.69f,-0.1f);
    glVertex2f(-0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.31f,-0.0f);
    glVertex2d(-0.3f,-0.24f);
    glVertex2d(-0.32f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.31f,-0.1f);
    glVertex2f(-0.31f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.73f,-0.0f);
    glVertex2d(-0.72f,-0.24f);
    glVertex2d(-0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.73f,-0.1f);
    glVertex2f(-0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.75f,-0.0f);
    glVertex2d(-0.74f,-0.24f);
    glVertex2d(-0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.75f,-0.1f);
    glVertex2f(-0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.47f,-0.0f);
    glVertex2d(-0.46f,-0.24f);
    glVertex2d(-0.48f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.47f,-0.1f);
    glVertex2f(-0.47f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.96f,-0.0f);
    glVertex2d(-0.95f,-0.24f);
    glVertex2d(-0.97f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.96f,-0.1f);
    glVertex2f(-0.96f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.11f,-0.0f);
    glVertex2d(-0.1f,-0.24f);
    glVertex2d(-0.12f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.11f,-0.1f);
    glVertex2f(-0.11f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.05f,-0.1f);
    glVertex2d(0.04f,-0.24f);
    glVertex2d(0.06f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.05f,-0.15f);
    glVertex2f(0.05f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.15f,-0.07f);
    glVertex2d(-0.14f,-0.24f);
    glVertex2d(-0.16f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.15f,-0.1f);
    glVertex2f(-0.15f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.17f,-0.0f);
    glVertex2d(-0.16f,-0.24f);
    glVertex2d(-0.18f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.17f,-0.1f);
    glVertex2f(-0.17f,-0.26f);
    glEnd();


//_________ Middle Corn Field __________

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.68f,-0.1f);
    glVertex2d(0.67f,-0.34f);
    glVertex2d(0.69f,-0.34f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.68f,-0.2f);
    glVertex2f(0.68f,-0.36f);
    glEnd();






//house_________________________________________________

//a
 glBegin(GL_QUADS);
	glColor3f(1.78f, 1.74f,0.73f);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.55f, -0.65f);

	glVertex2f(-0.55f, -0.5f);
	glVertex2f(-0.75f, -0.5f);
	glEnd();

//b
 glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.78f, -0.68f);

	glVertex2f(-0.52f, -0.68f);
	glVertex2f(-0.55f, -0.65f);
	glEnd();


//c
glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.77,-0.5);
    glVertex2f(-0.53,-0.5);
    glVertex2f(-0.65,-0.42);

    glEnd();

 //d
 glBegin(GL_QUADS);
	glColor3f(1.00f, 0.0f,0.0f);

	glVertex2f(-0.68f, -0.65f);
	glVertex2f(-0.62f, -0.65f);

	glVertex2f(-0.62f, -0.55f);
	glVertex2f(-0.68f, -0.55f);
	glEnd();




    //h0use small
    //a


		glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.25f, -0.5f);

	glVertex2f(-0.25f, -0.35f);
	glVertex2f(-0.45f, -0.35f);
	glEnd();


	//b
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.5,-0.35);
    glVertex2f(-0.2,-0.35);
    glVertex2f(-0.35,-0.25);

    glEnd();

//c
glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.5f, -0.55f);

	glVertex2f(-0.2f, -0.55f);
	glVertex2f(-0.25f, -0.5f);
	glEnd();

	//d
	glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);
	glVertex2f(-0.38f, -0.5f);
	glVertex2f(-0.32f, -0.5f);

	glVertex2f(-0.32f, -0.42f);
	glVertex2f(-0.38f, -0.42f);
	glEnd();

	//road big house
	glBegin(GL_QUADS);
	glColor3f(0.92f, 0.53f, 0.17f);

	glVertex2f(-0.8f, -1.0f);
	glVertex2f(-0.7f, -1.0f);

	glVertex2f(-0.6f, -0.75f);
	glVertex2f(-0.7f, -0.75f);
	glEnd();

	//house 3
	//a
	glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.75f, -0.25f);
	glVertex2f(-0.75f, -0.35f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.55f, -0.25f);
	glEnd();

//b

glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.8f, -0.4f);
	glVertex2f(-0.5f, -0.4f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.75f, -0.35f);
	glEnd();

	//c
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.8,-0.25);
    glVertex2f(-0.5,-0.25);
    glVertex2f(-0.65,-0.18);

    glEnd();

    //d
    glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);

	glVertex2f(-0.68f, -0.35f);
	glVertex2f(-0.62f, -0.35f);

	glVertex2f(-0.62f, -0.26f);
	glVertex2f(-0.68f, -0.26f);
	glEnd();





//____________________ Tree ____________________ Faysal (20-43800-2)____________________

    GLfloat p9= -0.9f; GLfloat q9= -0.4f; GLfloat r9 = 0.12f;
    int tringle9=40;

    GLfloat tp9 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p9,q9);
    for(int i= 0;i<=tringle9; i++)
    {
        glVertex2f (p9+(r9*cos(i*tp9/tringle9)),
                    q9+(r9*sin(i*tp9/tringle9))
                    );


    }
    glEnd();

    GLfloat p10= -0.9f; GLfloat q10= -0.3f; GLfloat r10 = 0.10f;
    int tringle10=40;

    GLfloat tp10 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p10,q10);
    for(int i= 0;i<=tringle10; i++)
    {
        glVertex2f (p10+(r10*cos(i*tp10/tringle10)),
                    q10+(r10*sin(i*tp10/tringle10))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.9,-0.7);
    glVertex2f(-0.9,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.95,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.85,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();


    //Tree 2
    GLfloat p11= -0.1f; GLfloat q11= -0.4f; GLfloat r11 = 0.12f;
    int tringle11=40;

    GLfloat tp11 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p11,q11);
    for(int i= 0;i<=tringle11; i++)
    {
        glVertex2f (p11+(r11*cos(i*tp11/tringle11)),
                    q11+(r11*sin(i*tp11/tringle11))
                    );


    }
    glEnd();

    GLfloat p12= -0.1f; GLfloat q12= -0.3f; GLfloat r12 = 0.10f;
    int tringle12=40;

    GLfloat tp12 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p12,q12);
    for(int i= 0;i<=tringle12; i++)
    {
        glVertex2f (p12+(r12*cos(i*tp12/tringle12)),
                    q12+(r12*sin(i*tp12/tringle12))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.1,-0.7);
    glVertex2f(-0.1,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.2,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(0.0,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();





//Front River_________________________
//River Line
//1

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.125f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glEnd();



 //2

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.195f,-1.0f);
 glEnd();



//3

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.31f,-0.25f);
 glVertex2f(0.405f,-0.70f);
 glEnd();



//4

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(1.0f,-0.7f);
 glEnd();


 //5

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(-1.0f,-0.7f);
 glEnd();






//Front Fountain____________________
//1 : Attached

 glBegin(GL_QUADS);
 glColor3ub(30,144,255);
 glVertex2f(0.26f,-0.06f);
 glVertex2f(0.10f,-0.05f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.32f,-0.25f);
 glEnd();


// Fountain Stream___________________________________________________________code : 2092 to 2126___________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.08f);
glVertex2d(0.17f ,-0.2f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.1f);
glVertex2d(0.21f ,-0.2f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.13f);
glVertex2d(0.14f ,-0.23f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.18f ,-0.17f);
glVertex2d(0.189f ,-0.23f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.13f);
glVertex2d(0.27f ,-0.19f);
glEnd();



//River Water____________________
//1 : Attached

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(0.32f,-0.25f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.20f,-1.0f);
 glVertex2f(0.40f,-0.70f);

 glEnd();


 // 1.River Stream____________________________________________code : 2144 to 2192_________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.6f);
glVertex2d(0.17f ,-0.67f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.4f);
glVertex2d(0.21f ,-0.45f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.43f);
glVertex2d(0.14f ,-0.48f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.53f);
glVertex2d(0.32f ,-0.57f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.63f);
glVertex2d(0.27f ,-0.69f);
glEnd();




//2

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(1.0f,-0.7f);
 glVertex2f(-1.0f,-0.7f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


  // 2.River Stream____________________________________________code : 2195 to 2238__________________________Animation added x horizontally________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.1f ,-0.8f);
glVertex2d(0.2f ,-0.8f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.1f ,-0.9f);
glVertex2d(-0.21f ,-0.9f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.93f);
glVertex2d(0.4f ,-0.937f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.8f ,-0.83f);
glVertex2d(-0.9f ,-0.836f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.5f ,-0.85f);
glVertex2d(0.6f ,-0.86f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.6f ,-0.91f);
glVertex2d(-0.7f ,-0.92f);
glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 01
//1

    GLfloat p011=0.295f; GLfloat q011= -0.26f; GLfloat r011 = 0.028f;
    int tringle011=40;

    GLfloat tp011 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p011,q011);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p011+(r011*cos(i*tp011/tringle011)),
                    q011+(r011*sin(i*tp011/tringle011))
                    );
    }

 glEnd ();


//2

     GLfloat p012=0.25f; GLfloat q012= -0.26f; GLfloat r012 = 0.025f;
    int tringle012=40;

    GLfloat tp012 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p012,q012);
    for(int i= 0;i<=tringle012; i++)
    {
        glVertex2f (
                    p012+(r012*cos(i*tp012/tringle012)),
                    q012+(r012*sin(i*tp012/tringle012))
                    );
    }

 glEnd ();


//3

    GLfloat p013=0.2f; GLfloat q013= -0.26f; GLfloat r013 = 0.028f;
    int tringle013=40;

    GLfloat tp013 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p013,q013);
    for(int i= 0;i<=tringle013; i++)
    {
        glVertex2f (
                    p013+(r013*cos(i*tp013/tringle013)),
                    q013+(r013*sin(i*tp013/tringle013))
                    );
    }

 glEnd ();


//4

    GLfloat p014=0.155f; GLfloat q014= -0.26f; GLfloat r014 = 0.036f;
    int tringle014=40;

    GLfloat tp014 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p014,q014);
    for(int i= 0;i<=tringle014; i++)
    {
        glVertex2f (
                    p014+(r014*cos(i*tp014/tringle014)),
                    q014+(r014*sin(i*tp014/tringle014))
                    );
    }

 glEnd ();









//Stick_______________________________

glLineWidth(4.5);
glBegin(GL_LINES);
glColor3ub(139,69,19);
glVertex2d(-0.328f,-0.69f);
glVertex2d(-0.328f,-0.61f);
glEnd();







//Barrier boat______________________________

glBegin(GL_QUADS);
glColor3ub(128,0,0);
glVertex2d(-0.1f,-0.71f);
glVertex2d(-0.3f,-0.71f);
glVertex2d(-0.24f,-0.76f);
glVertex2d(-0.16f,-0.76f);
glEnd();

//Rope
//1
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.33f,-0.65f);
glVertex2d(-0.28f,-0.71f);
glEnd();

//2
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.28f,-0.71f);
glVertex2d(-0.287f,-0.72f);
glEnd();


//load
//front

glBegin(GL_QUADS);
glColor3ub(184,134,12);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.16f,-0.68f);
glVertex2d(-0.15f,-0.71f);
glVertex2d(-0.23f,-0.71f);
glEnd();

//back

glBegin(GL_TRIANGLES);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.24f,-0.71f);
glVertex2d(-0.22f,-0.71f);
glEnd();



//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();

    //__________________ Boat __________________ Faysal (20-43800-2)__________________

glPushMatrix();
glTranslated(position_Boat,0.0f,0.0f);

glBegin(GL_POLYGON);
glColor3f(0.0f,0.0f,0.0f);
glVertex2d(0.4f,-0.78f);
glVertex2d(0.49f,-0.85f);
glVertex2d(0.61f,-0.85f);
glVertex2d(0.7f,-0.78f);
glEnd();

    glLineWidth(1.5f);
    glBegin(GL_LINES);
    glColor3ub(0.0f, 0.0f, 0.0f);
    glVertex2f(0.55,-0.78);
    glVertex2f(0.55,-0.5);
    glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.545f,-0.45f);
glVertex2d(0.47f,-0.77f);
glVertex2d(0.545f,-0.77f);
glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.555f,-0.45f);
glVertex2d(0.65f,-0.77f);
glVertex2d(0.555f,-0.77f);
glEnd();








//Boat___________________________________




glBegin(GL_QUADS);
glColor3f(0.5,0.0f,0.0f);
glVertex2d(0.3f,-0.87f);
glVertex2d(0.5f,-0.87f);
glVertex2d(0.44f,-0.92f);
glVertex2d(0.36f,-0.92f);
glEnd();


//load

glBegin(GL_QUADS);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(0.46f,-0.85f);
glVertex2d(0.38f,-0.85f);
glVertex2d(0.38f,-0.87f);
glVertex2d(0.46f,-0.87f);
glEnd();


//stick
//1

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.87f);
glVertex2d(0.44f,-0.77f);
glEnd();


//2

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.87f);
glVertex2d(0.43f,-0.77f);
glEnd();


//3

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.87f);
glVertex2d(0.4f,-0.81f);
glEnd();


//Flag
//1
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.77f);
glVertex2d(0.48f,-0.84f);
glVertex2d(0.44f,-0.83f);
glEnd();

//2
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.77f);
glVertex2d(0.39f,-0.84f);
glVertex2d(0.43f,-0.83f);
glEnd();


//3

glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.81f);
glVertex2d(0.37f,-0.85f);
glVertex2d(0.4f,-0.84f);
glEnd();
glPopMatrix();












//Snow_______________________________________________________________


//serial 500
//1

glPushMatrix();
        glTranslated(0.0f,Position_Snow,0.0f);
        glColor3ub(255, 255, 255);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);


       glTranslated(0.2,-0.5,0);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);

       glTranslated(-0.1,-0.45,0);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);

       glTranslated(0.0,-0.5,0);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);

       glTranslated(0.2,-0.5,0);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);

       glTranslated(-0.1,-0.5,0);
       snow(-1.5,.95,.01);
        snow(-.95,.75,.01);
        snow(-.65,0.55,.01);
        snow(-.35,0.46,.01);
        snow(-.05,0.648,.01);
        snow(.25,.83,.01);
        snow(.55,0.8,.01);
        snow(.75,0.35,.01);
        snow(1.,0.26,.01);
        snow(-.45,0.148,.01);
       glLoadIdentity();



	    glPopMatrix();

	    glutTimerFunc(5000,display_spring,0);

Idle();

glFlush();
}



///________________________________________________________________________________________Spring_______________________________________________________________________________________________________

void spring() {

// Display____________________________
glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);


//Sky___________________________
	glBegin(GL_POLYGON);
	if(night==true)

       {
       glColor3ub(19,24,98);

       }

       else
	glColor3ub(175,238,238);

	glVertex2f(-1.0f, 1.0f);
	glVertex2f(-1.0f, -1.0f);
	glVertex2f(1.0f, -1.0f);
	glVertex2f(1.0f, 1.0f);
	  glEnd();



// Sun___________________________________________________________

    GLfloat p8=-0.3f; GLfloat q8= 0.66f; GLfloat r8 = 0.12f;
    int tringle8=40;

    GLfloat tp8 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    if(night==true){
        glColor3ub ( 194,197,204);
    }
    else{
    glColor3f(1.0f,0.9f,0.0f);
    }
    glVertex2f (p8,q8);
    for(int i= 0;i<=tringle8; i++)
    {
        glVertex2f (
                    p8+(r8*cos(i*tp8/tringle8)),
                    q8+(r8*sin(i*tp8/tringle8))
                    );


    }

 glEnd ();






//cloud__________________________________________________________
//Serial : 0


glPushMatrix();
glTranslated(position_cloud,0.0f,0.0f);
    GLfloat p01=-0.8f; GLfloat q01=0.7f; GLfloat r01 = 0.06f;
    int tringle01=40;

    GLfloat tp01 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p01,q01);
    for(int i= 0;i<=tringle01; i++)
    {
        glVertex2f (
                    p01+(r01*cos(i*tp01/tringle01)),
                    q01+(r01*sin(i*tp01/tringle01))
                    );


    }

 glEnd ();

//left 2

     GLfloat p31=-0.75f; GLfloat q31=0.75f; GLfloat r31 = 0.06f;
    int tringle31=40;

    GLfloat tp31 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p31,q31);
    for(int i= 0;i<=tringle31; i++)
    {
        glVertex2f (
                    p31+(r31*cos(i*tp31/tringle31)),
                    q31+(r31*sin(i*tp31/tringle31)));



    }

 glEnd ();

//left 3

     GLfloat p32=-0.69f; GLfloat q32=0.75f; GLfloat r32 = 0.07f;
    int tringle32=40;

    GLfloat tp32 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p32,q32);
    for(int i= 0;i<=tringle32; i++)
    {
        glVertex2f (
                    p32+(r32*cos(i*tp32/tringle32)),
                    q32+(r32*sin(i*tp32/tringle32))
                    );


    }

 glEnd ();


//left 4

GLfloat p33=-0.75f; GLfloat q33=0.7f; GLfloat r33 = 0.07f;
    int tringle33=40;

    GLfloat tp33 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p33,q33);
    for(int i= 0;i<=tringle33; i++)
    {
        glVertex2f (
                    p33+(r33*cos(i*tp33/tringle33)),
                    q33+(r33*sin(i*tp33/tringle33))
                    );


    }

 glEnd ();



    GLfloat p34=0.8f; GLfloat q34=0.7f; GLfloat r34 = 0.06f;
    int tringle34=40;

    GLfloat tp34 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p34,q34);
    for(int i= 0;i<=tringle34; i++)
    {
        glVertex2f (
                    p34+(r34*cos(i*tp34/tringle34)),
                    q34+(r34*sin(i*tp34/tringle34))
                    );


    }

 glEnd ();

//left 2

     GLfloat p35=0.75f; GLfloat q35=0.75f; GLfloat r35 = 0.06f;
    int tringle35=40;

    GLfloat tp35 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p35,q35);
    for(int i= 0;i<=tringle35; i++)
    {
        glVertex2f (
                    p35+(r35*cos(i*tp35/tringle35)),
                    q35+(r35*sin(i*tp35/tringle35)));



    }

 glEnd ();

//left 3

     GLfloat p36=0.69f; GLfloat q36=0.75f; GLfloat r36 = 0.07f;
    int tringle36=40;

    GLfloat tp36 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p36,q36);
    for(int i= 0;i<=tringle36; i++)
    {
        glVertex2f (
                    p36+(r36*cos(i*tp36/tringle36)),
                    q36+(r36*sin(i*tp36/tringle36))
                    );


    }

 glEnd ();

//left 4

GLfloat p37=0.75f; GLfloat q37=0.7f; GLfloat r37 = 0.07f;
    int tringle37=40;

    GLfloat tp37 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p37,q37);
    for(int i= 0;i<=tringle37; i++)
    {
        glVertex2f (
                    p37+(r37*cos(i*tp37/tringle37)),
                    q37+(r37*sin(i*tp37/tringle37))
                    );


    }

 glEnd ();


    GLfloat p38=0.4f; GLfloat q38=0.75f; GLfloat r38 = 0.06f;
    int tringle38=40;

    GLfloat tp38 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p38,q38);
    for(int i= 0;i<=tringle38; i++)
    {
        glVertex2f (
                    p38+(r38*cos(i*tp38/tringle38)),
                    q38+(r38*sin(i*tp38/tringle38))
                    );


    }

 glEnd ();

//left 2

     GLfloat p39=0.35f; GLfloat q39=0.8f; GLfloat r39 = 0.06f;
    int tringle39=40;

    GLfloat tp39 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p39,q39);
    for(int i= 0;i<=tringle39; i++)
    {
        glVertex2f (
                    p39+(r39*cos(i*tp39/tringle39)),
                    q39+(r39*sin(i*tp39/tringle39)));



    }

 glEnd ();

//left 3

     GLfloat p40=0.29f; GLfloat q40=0.8f; GLfloat r40= 0.07f;
    int tringle40=40;

    GLfloat tp40 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p40,q40);
    for(int i= 0;i<=tringle40; i++)
    {
        glVertex2f (
                    p40+(r40*cos(i*tp40/tringle40)),
                    q40+(r40*sin(i*tp40/tringle40))
                    );


    }

 glEnd ();

//left 4

GLfloat p41=0.35f; GLfloat q41=0.75f; GLfloat r41 = 0.07f;
    int tringle41=40;

    GLfloat tp41 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f (p41,q41);
    for(int i= 0;i<=tringle41; i++)
    {
        glVertex2f (
                    p41+(r41*cos(i*tp41/tringle41)),
                    q41+(r41*sin(i*tp41/tringle41))
                    );


    }


 glEnd ();
glPopMatrix();





//____________________Bird ____________________ Faysal (20-43800-2)____________________
//1
glPushMatrix();
glTranslated(position_Bird,position_Bird,0.0f);


    glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f); // brown
    glVertex2f(-0.71,0.73);
    glVertex2f(-0.7,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f); // brown
    glVertex2f(-0.69,0.73);
    glVertex2f(-0.7,0.7);
    glEnd();


//2

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.61,0.73);
    glVertex2f(-0.6,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.59,0.73);
    glVertex2f(-0.6,0.7);
    glEnd();


//3
           glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.66,0.66);
    glVertex2f(-0.65,0.65);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.64,0.66);
    glVertex2f(-0.65,0.65);
    glEnd();


//4

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.66,0.73);
    glVertex2f(-0.65,0.7);
    glEnd();

        glLineWidth(5.0f);
    glBegin(GL_LINES);
    glColor3f(0.0f, 0.0f, 0.0f);
    glVertex2f(-0.64,0.73);
    glVertex2f(-0.65,0.7);
    glEnd();

glPopMatrix();



// Hill______________________________

//1......
//Left : Front Side

glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-1.0f , 0.0f);
   glEnd();



//Left : Back Side

glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(-0.15f , 0.0f);
   glVertex2f(-0.55f, 0.60f);
   glVertex2f(-0.30f , 0.0f);
   glEnd();



//2......
//Right : Front Side
glBegin(GL_TRIANGLES);
   glColor3f(1.0f, 0.4f, 0.0f);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(1.0f , 0.0f);
   glEnd();



//Right : Back Side
glBegin(GL_TRIANGLES);
   glColor3ub(139,69,19);
   glVertex2f(0.15f , 0.0f);
   glVertex2f(0.56f, 0.60f);
   glVertex2f(0.30f , 0.0f);
   glEnd();



//3......
//Center : Front Side

glBegin(GL_POLYGON);
   glColor3f(1.0f, 0.5f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.05f, 0.53f);
   glVertex2f(-0.01f, 0.55f);
   glVertex2f(0.35f , 0.0f);
   glEnd();


/*
//Center : Back Side

glBegin(GL_TRIANGLES);
   glColor3f(0.9f, 0.45f, 0.0f);
   glVertex2f(-0.50f , 0.0f);
   glVertex2f(-0.12f, 0.55f);
   glVertex2f(-0.35f , 0.0f);
   glEnd();

*/


//Fountain______________________

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(-0.04f, 0.535f);
   glVertex2f(-0.09f, 0.53f);
   glVertex2f(-0.13f, 0.0f);
   glVertex2f(0.06f , 0.0f);
   glEnd();



//Fountain Stream____________________________________________________________//Code no 614 - 700 ........animation added Y vertically___________________________________
//1



glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.06f, 0.5f);
   glVertex2f(-0.056f, 0.53f);
   glVertex2f(-0.06f, 0.46f);
   glVertex2f(-0.05f , 0.3f);
   glEnd();



//2

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.088f, 0.5f);
   glVertex2f(-0.086f, 0.53f);
   glVertex2f(-0.088f, 0.46f);
   glVertex2f(-0.08f , 0.3f);
   glEnd();



//3

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.027f, 0.4f);
   glVertex2f(-0.02f, 0.33f);
   glVertex2f(-0.023f, 0.36f);
   glVertex2f(-0.02f , 0.2f);
   glEnd();



//4

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.074f, 0.3f);
   glVertex2f(-0.07f, 0.33f);
   glVertex2f(-0.072f, 0.26f);
   glVertex2f(-0.07f , 0.2f);
   glEnd();



//5

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.014f, 0.15f);
   glVertex2f(-0.01f, 0.1f);
   glVertex2f(-0.015f, 0.12f);
   glVertex2f(-0.012f , 0.01f);
   glEnd();



//6

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.095f, 0.15f);
   glVertex2f(-0.094f, 0.1f);
   glVertex2f(-0.092f, 0.12f);
   glVertex2f(-0.09f , 0.01f);
   glEnd();



//7

glBegin(GL_POLYGON);
   glColor3ub(0,191,250);
   glVertex2f(-0.064f, 0.15f);
   glVertex2f(-0.062f, 0.1f);
   glVertex2f(-0.06f, 0.12f);
   glVertex2f(-0.057f , 0.01f);
   glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 00
//1

    GLfloat p001=0.04f; GLfloat q001= -0.01f; GLfloat r001 = 0.031f;
    int tringle001=40;

    GLfloat tp001 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p001,q001);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p001+(r001*cos(i*tp001/tringle001)),
                    q001+(r001*sin(i*tp001/tringle001))
                    );
    }

 glEnd ();


//2

     GLfloat p002=0.0f; GLfloat q002= -0.01f; GLfloat r002 = 0.023f;
    int tringle002=40;

    GLfloat tp002 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p002,q002);
    for(int i= 0;i<=tringle002; i++)
    {
        glVertex2f (
                    p002+(r002*cos(i*tp002/tringle002)),
                    q002+(r002*sin(i*tp002/tringle002))
                    );
    }

 glEnd ();


//3

    GLfloat p003=-0.02f; GLfloat q003= -0.01f; GLfloat r003 = 0.028f;
    int tringle003=40;

    GLfloat tp003 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p003,q003);
    for(int i= 0;i<=tringle003; i++)
    {
        glVertex2f (
                    p003+(r003*cos(i*tp003/tringle003)),
                    q003+(r003*sin(i*tp003/tringle003))
                    );
    }

 glEnd ();


//4

    GLfloat p004=-0.07f; GLfloat q004= -0.01f; GLfloat r004 = 0.036f;
    int tringle004=40;

    GLfloat tp004 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p004,q004);
    for(int i= 0;i<=tringle004; i++)
    {
        glVertex2f (
                    p004+(r004*cos(i*tp004/tringle004)),
                    q004+(r004*sin(i*tp004/tringle004))
                    );
    }

 glEnd ();


//5

    GLfloat p005=-0.115f; GLfloat q005= -0.01f; GLfloat r005 = 0.022f;
    int tringle005=40;

    GLfloat tp005 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p005,q005);
    for(int i= 0;i<=tringle005; i++)
    {
        glVertex2f (
                    p005+(r005*cos(i*tp005/tringle005)),
                    q005+(r005*sin(i*tp005/tringle005))
                    );
    }

 glEnd ();







//Path________________________
//including with hill

 glBegin(GL_QUADS);
 glColor3ub(45,107,47);
 glVertex2f(1.0f,0.0f);
 glVertex2f(-1.0f,0.0f);
 glVertex2f(-1.0f,-0.50f);
 glVertex2f(1.0f,-.50f);
 glEnd();


//River________________________
//include with fountain
//River Line
//1

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(-0.14f,0.0f);
 glVertex2f(-0.04f,-0.50f);
 glEnd();



 //2

 glLineWidth(8.0);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.07f,0.0f);
 glVertex2f(0.055f,-0.30f);
 glEnd();



 //River Water

glBegin(GL_POLYGON);
   glColor3ub(30,144,255);
   glVertex2f(0.07f , 0.0f);
   glVertex2f(-0.14f, 0.0f);
   glVertex2f(-0.05f,-0.50f);
   glVertex2f(0.05f,-0.50f);
   glEnd();



//River Stream_______________________________________________code 872 to 892_______________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.09f ,-0.05f);
glVertex2d(-0.09f ,-0.1f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.03f ,-0.02f);
glVertex2d(0.03f ,-0.1f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.03f ,-0.02f);
glVertex2d(-0.035f ,-0.1f);
glEnd();




//Back Green hill_____________________________________________
//Serial : normal digit
//1
//Left


    GLfloat p1=-0.70f; GLfloat q1= -0.1f; GLfloat r1 = 0.4f;
    int tringle1=40;

    GLfloat tp1 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p1,q1);
    for(int i= 0;i<=tringle1; i++)
    {
        glVertex2f (
                    p1+(r1*cos(i*tp1/tringle1)),
                    q1+(r1*sin(i*tp1/tringle1))
                    );


    }

 glEnd ();






//2
//Right


    GLfloat p2=0.70f; GLfloat q2= -0.1f; GLfloat r2 = 0.4f;
    int tringle2=40;

    GLfloat tp2 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.8f,0.8f,0.0f);
    glVertex2f (p2,q2);
    for(int i= 0;i<=tringle2; i++)
    {
        glVertex2f (
                    p2+(r2*cos(i*tp2/tringle2)),
                    q2+(r2*sin(i*tp2/tringle2))
                    );


    }

 glEnd ();





//Center Green hill1______________________________________________
//Serial : normal digit
//1
//Left

 GLfloat p4=-0.95f; GLfloat q4= -0.22f; GLfloat r4 = 0.35f;
    int tringle4=40;

    GLfloat tp4 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p4,q4);
    for(int i= 0;i<=tringle4; i++)
    {
        glVertex2f (
                    p4+(r4*cos(i*tp4/tringle4)),
                    q4+(r4*sin(i*tp4/tringle4))
                    );


    }

 glEnd ();



//2

 GLfloat p5=-0.46f; GLfloat q5= -0.45f; GLfloat r5 = 0.48f;
    int tringle5=40;

    GLfloat tp5 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p5,q5);
    for(int i= 0;i<=tringle5; i++)
    {
        glVertex2f (
                    p5+(r5*cos(i*tp5/tringle5)),
                    q5+(r5*sin(i*tp5/tringle5))
                    );


    }

 glEnd ();




//3

 GLfloat p6=0.15f; GLfloat q6= -0.53f; GLfloat r6 = 0.48f;
    int tringle6=40;

    GLfloat tp6 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p6,q6);
    for(int i= 0;i<=tringle6; i++)
    {
        glVertex2f (
                    p6+(r6*cos(i*tp6/tringle6)),
                    q6+(r6*sin(i*tp6/tringle6))
                    );


    }

 glEnd ();





//4
//Right

 GLfloat p7=0.7f; GLfloat q7= -0.35f; GLfloat r7 = 0.50f;
    int tringle7=40;

    GLfloat tp7 =1.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(0.3f,0.6f,0.0f);
    glVertex2f (p7,q7);
    for(int i= 0;i<=tringle7; i++)
    {
        glVertex2f (
                    p7+(r7*cos(i*tp7/tringle7)),
                    q7+(r7*sin(i*tp7/tringle7))
                    );


    }

 glEnd ();






//Front path_________________________
//1

 glBegin(GL_QUADS);
 glColor3f(0.3f,0.7f,0.0f);
 glVertex2f(1.0f,-0.25f);
 glVertex2f(-1.0f,-0.25f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


//2

 glBegin(GL_QUADS);
 glColor3f(0.7f,0.8f,0.0f);
 glVertex2f(1.0f,-0.40f);
 glVertex2f(-1.0f,-0.40f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


 //3

 glBegin(GL_QUADS);
 glColor3f(0.8f,0.5f,0.0f);
 glVertex2f(1.0f,-0.70f);
 glVertex2f(-1.0f,-0.70f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();







//__________________ Corn Field __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.7f,-0.1f);
    glVertex2d(0.69f,-0.38f);
    glVertex2d(0.71f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.7,-0.2);
    glVertex2f(0.7,-0.4);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.72f,-0.1f);
    glVertex2d(0.71f,-0.38f);
    glVertex2d(0.73f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.72,-0.2);
    glVertex2f(0.72,-0.4);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.74f,-0.1f);
    glVertex2d(0.73f,-0.38f);
    glVertex2d(0.75f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.74,-0.2);
    glVertex2f(0.74,-0.4);
    glEnd();

        //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.76f,-0.1f);
    glVertex2d(0.75f,-0.38f);
    glVertex2d(0.77f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.76,-0.2);
    glVertex2f(0.76,-0.4);
    glEnd();

            //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.78f,-0.1f);
    glVertex2d(0.77f,-0.38f);
    glVertex2d(0.79f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.78,-0.2);
    glVertex2f(0.78,-0.4);
    glEnd();

                //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.8f,-0.1f);
    glVertex2d(0.79f,-0.38f);
    glVertex2d(0.81f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.8,-0.2);
    glVertex2f(0.8,-0.4);
    glEnd();

                    //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.82f,-0.1f);
    glVertex2d(0.81f,-0.38f);
    glVertex2d(0.83f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.82,-0.2);
    glVertex2f(0.82,-0.4);
    glEnd();

                        //8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.84f,-0.1f);
    glVertex2d(0.83f,-0.38f);
    glVertex2d(0.85f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.84,-0.2);
    glVertex2f(0.84,-0.4);
    glEnd();

//9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.86f,-0.1f);
    glVertex2d(0.85f,-0.38f);
    glVertex2d(0.87f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.86,-0.2);
    glVertex2f(0.86,-0.4);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.88f,-0.1f);
    glVertex2d(0.87f,-0.38f);
    glVertex2d(0.89f,-0.38f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.88,-0.2);
    glVertex2f(0.88,-0.4);
    glEnd();



//Corn Field Backward 1_________________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.67f,-0.0f);
    glVertex2d(0.66f,-0.24f);
    glVertex2d(0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.67f,-0.1f);
    glVertex2f(0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.69f,-0.0f);
    glVertex2d(0.68f,-0.24f);
    glVertex2d(0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.69f,-0.1f);
    glVertex2f(0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.71f,-0.0f);
    glVertex2d(0.7f,-0.24f);
    glVertex2d(0.72f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.71f,-0.1f);
    glVertex2f(0.71f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.73f,-0.0f);
    glVertex2d(0.72f,-0.24f);
    glVertex2d(0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.73f,-0.1f);
    glVertex2f(0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.75f,-0.0f);
    glVertex2d(0.74f,-0.24f);
    glVertex2d(0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.75f,-0.1f);
    glVertex2f(0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.77f,-0.0f);
    glVertex2d(0.76f,-0.24f);
    glVertex2d(0.78f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.77f,-0.1f);
    glVertex2f(0.77f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.79f,-0.0f);
    glVertex2d(0.78f,-0.24f);
    glVertex2d(0.8f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.79f,-0.1f);
    glVertex2f(0.79f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.81f,-0.0f);
    glVertex2d(0.8f,-0.24f);
    glVertex2d(0.82f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.81f,-0.1f);
    glVertex2f(0.81f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.83f,-0.0f);
    glVertex2d(0.82f,-0.24f);
    glVertex2d(0.84f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.83f,-0.1f);
    glVertex2f(0.83f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.85f,-0.0f);
    glVertex2d(0.84f,-0.24f);
    glVertex2d(0.86f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.85f,-0.1f);
    glVertex2f(0.85f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.87f,-0.0f);
    glVertex2d(0.86f,-0.24f);
    glVertex2d(0.88f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.87f,-0.1f);
    glVertex2f(0.87f,-0.26f);
    glEnd();

//__________________ Random Tree __________________ Faysal (20-43800-2)__________________

//1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.78f,0.24f);
    glVertex2d(-0.76f,0.1f);
    glVertex2d(-0.8f,0.1f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.78f,0.16f);
    glVertex2f(-0.78f,0.05f);
    glEnd();

    //2
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.88f,0.3f);
    glVertex2d(-0.86f,0.15f);
    glVertex2d(-0.9f,0.15f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.88f,0.26f);
    glVertex2f(-0.88f,0.09f);
    glEnd();

    //3
        glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.58f,0.2f);
    glVertex2d(-0.56f,0.05f);
    glVertex2d(-0.6f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.58f,0.16f);
    glVertex2f(-0.58f,0.0f);
    glEnd();

    //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.38f,0.2f);
    glVertex2d(-0.36f,0.05f);
    glVertex2d(-0.4f,0.05f);
    glEnd();

    glLineWidth(3.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.38f,0.16f);
    glVertex2f(-0.38f,0.0f);
    glEnd();

    // Part 2

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.67f,-0.0f);
    glVertex2d(-0.66f,-0.24f);
    glVertex2d(-0.68f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.67f,-0.1f);
    glVertex2f(-0.67f,-0.26f);
    glEnd();

    //2
    glBegin(GL_TRIANGLES);
    glColor3ub(-0,102,0);
    glVertex2d(-0.69f,-0.0f);
    glVertex2d(-0.68f,-0.24f);
    glVertex2d(-0.7f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.69f,-0.1f);
    glVertex2f(-0.69f,-0.26f);
    glEnd();

        //3
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.31f,-0.0f);
    glVertex2d(-0.3f,-0.24f);
    glVertex2d(-0.32f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.31f,-0.1f);
    glVertex2f(-0.31f,-0.26f);
    glEnd();

            //4
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.73f,-0.0f);
    glVertex2d(-0.72f,-0.24f);
    glVertex2d(-0.74f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.73f,-0.1f);
    glVertex2f(-0.73f,-0.26f);
    glEnd();

                //5
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.75f,-0.0f);
    glVertex2d(-0.74f,-0.24f);
    glVertex2d(-0.76f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.75f,-0.1f);
    glVertex2f(-0.75f,-0.26f);
    glEnd();

                   //6
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.47f,-0.0f);
    glVertex2d(-0.46f,-0.24f);
    glVertex2d(-0.48f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.47f,-0.1f);
    glVertex2f(-0.47f,-0.26f);
    glEnd();

                       //7
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.96f,-0.0f);
    glVertex2d(-0.95f,-0.24f);
    glVertex2d(-0.97f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.96f,-0.1f);
    glVertex2f(-0.96f,-0.26f);
    glEnd();

//8
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.11f,-0.0f);
    glVertex2d(-0.1f,-0.24f);
    glVertex2d(-0.12f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.11f,-0.1f);
    glVertex2f(-0.11f,-0.26f);
    glEnd();

    //9
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.05f,-0.1f);
    glVertex2d(0.04f,-0.24f);
    glVertex2d(0.06f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.05f,-0.15f);
    glVertex2f(0.05f,-0.26f);
    glEnd();

    //10
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.15f,-0.07f);
    glVertex2d(-0.14f,-0.24f);
    glVertex2d(-0.16f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.15f,-0.1f);
    glVertex2f(-0.15f,-0.26f);
    glEnd();

        //11
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(-0.17f,-0.0f);
    glVertex2d(-0.16f,-0.24f);
    glVertex2d(-0.18f,-0.24f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(-0.17f,-0.1f);
    glVertex2f(-0.17f,-0.26f);
    glEnd();


//_________ Middle Corn Field __________

    //1
    glBegin(GL_TRIANGLES);
    glColor3ub(0,102,0);
    glVertex2d(0.68f,-0.1f);
    glVertex2d(0.67f,-0.34f);
    glVertex2d(0.69f,-0.34f);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(153, 76, 0);
    glVertex2f(0.68f,-0.2f);
    glVertex2f(0.68f,-0.36f);
    glEnd();


//__________________ Baloon __________________ Faysal (20-43800-2)__________________
glPushMatrix();
glTranslated(position_Baloon,0.01f,0.01f);
glLineWidth(3.5);
glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);
glVertex2d(-0.68f , 0.7);
glVertex2d(-0.68f , 0.55f);
glEnd();

glLineWidth(3.5);
glBegin(GL_LINES);
glColor3f(0.0,0.0,0.0);
glVertex2d(-0.72f , 0.7f);
glVertex2d(-0.72f , 0.55f);
glEnd();




GLfloat p201= -0.7f; GLfloat q201= 0.7f; GLfloat r201 = 0.05f;
    int tringle201=40;

    GLfloat tp201 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0,102,204);
    glVertex2f (p201,q201);
    for(int i= 0;i<=tringle201; i++)
    {
        glVertex2f (p201+(r201*cos(i*tp201/tringle201)),
                    q201+(r201*sin(i*tp201/tringle201))
                    );


    }
    glEnd();

    GLfloat p210= -0.7f; GLfloat q210= 0.67f; GLfloat r210 = 0.035f;
    int tringle210=40;

    GLfloat tp210 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0,102,204);
    glVertex2f (p210,q210);
    for(int i= 0;i<=tringle210; i++)
    {
        glVertex2f (p210+(r210*cos(i*tp210/tringle210)),
                    q210+(r210*sin(i*tp210/tringle210))
                    );


    }
    glEnd();

    glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 0.0);
	glVertex2d(-0.72f , 0.6f);
	glVertex2d(-0.72f , 0.55f);
	glVertex2d(-0.68f , 0.6f);
	glVertex2d(-0.68f , 0.55f);
	glVertex2d(-0.72f , 0.55f);
	glEnd();

	    glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 0.0);
	glVertex2d(-0.72f , 0.59f);
	glVertex2d(-0.72f , 0.55f);
	glVertex2d(-0.68f , 0.59f);
	glVertex2d(-0.68f , 0.55f);
	glVertex2d(-0.72f , 0.55f);
	glEnd();



glPopMatrix();

//house_________________________________________________

//a
 glBegin(GL_QUADS);
	glColor3f(1.78f, 1.74f,0.73f);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.55f, -0.65f);

	glVertex2f(-0.55f, -0.5f);
	glVertex2f(-0.75f, -0.5f);
	glEnd();

//b
 glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.75f, -0.65f);
	glVertex2f(-0.78f, -0.68f);

	glVertex2f(-0.52f, -0.68f);
	glVertex2f(-0.55f, -0.65f);
	glEnd();


//c
glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.77,-0.5);
    glVertex2f(-0.53,-0.5);
    glVertex2f(-0.65,-0.42);

    glEnd();

 //d
 glBegin(GL_QUADS);
	glColor3f(1.00f, 0.0f,0.0f);

	glVertex2f(-0.68f, -0.65f);
	glVertex2f(-0.62f, -0.65f);

	glVertex2f(-0.62f, -0.55f);
	glVertex2f(-0.68f, -0.55f);
	glEnd();




    //h0use small
    //a


		glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.25f, -0.5f);

	glVertex2f(-0.25f, -0.35f);
	glVertex2f(-0.45f, -0.35f);
	glEnd();


	//b
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.5,-0.35);
    glVertex2f(-0.2,-0.35);
    glVertex2f(-0.35,-0.25);

    glEnd();

//c
glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.45f, -0.5f);
	glVertex2f(-0.5f, -0.55f);

	glVertex2f(-0.2f, -0.55f);
	glVertex2f(-0.25f, -0.5f);
	glEnd();

	//d
	glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);
	glVertex2f(-0.38f, -0.5f);
	glVertex2f(-0.32f, -0.5f);

	glVertex2f(-0.32f, -0.42f);
	glVertex2f(-0.38f, -0.42f);
	glEnd();

	//road big house
	glBegin(GL_QUADS);
	glColor3f(0.92f, 0.53f, 0.17f);

	glVertex2f(-0.8f, -1.0f);
	glVertex2f(-0.7f, -1.0f);

	glVertex2f(-0.6f, -0.75f);
	glVertex2f(-0.7f, -0.75f);
	glEnd();

	//house 3
	//a
	glBegin(GL_QUADS);
	glColor3f(1.0f, 1.0f, 1.0f);

	glVertex2f(-0.75f, -0.25f);
	glVertex2f(-0.75f, -0.35f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.55f, -0.25f);
	glEnd();

//b

glBegin(GL_QUADS);
	glColor3ub(255,215,0);

	glVertex2f(-0.8f, -0.4f);
	glVertex2f(-0.5f, -0.4f);

	glVertex2f(-0.55f, -0.35f);
	glVertex2f(-0.75f, -0.35f);
	glEnd();

	//c
	glBegin(GL_TRIANGLES);

    glColor3f(1.0f,0.0f,0.0f);

    glVertex2f(-0.8,-0.25);
    glVertex2f(-0.5,-0.25);
    glVertex2f(-0.65,-0.18);

    glEnd();

    //d
    glBegin(GL_QUADS);
	glColor3f(1.0f, 0.0f, 0.0f);

	glVertex2f(-0.68f, -0.35f);
	glVertex2f(-0.62f, -0.35f);

	glVertex2f(-0.62f, -0.26f);
	glVertex2f(-0.68f, -0.26f);
	glEnd();





//____________________ Tree ____________________ Faysal (20-43800-2)____________________

    GLfloat p9= -0.9f; GLfloat q9= -0.4f; GLfloat r9 = 0.12f;
    int tringle9=40;

    GLfloat tp9 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p9,q9);
    for(int i= 0;i<=tringle9; i++)
    {
        glVertex2f (p9+(r9*cos(i*tp9/tringle9)),
                    q9+(r9*sin(i*tp9/tringle9))
                    );


    }
    glEnd();

    GLfloat p10= -0.9f; GLfloat q10= -0.3f; GLfloat r10 = 0.10f;
    int tringle10=40;

    GLfloat tp10 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p10,q10);
    for(int i= 0;i<=tringle10; i++)
    {
        glVertex2f (p10+(r10*cos(i*tp10/tringle10)),
                    q10+(r10*sin(i*tp10/tringle10))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.9,-0.7);
    glVertex2f(-0.9,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.95,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.85,-0.4);
    glVertex2f(-0.9,-0.5);
    glEnd();


    //Tree 2
    GLfloat p11= -0.1f; GLfloat q11= -0.4f; GLfloat r11 = 0.12f;
    int tringle11=40;

    GLfloat tp11 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p11,q11);
    for(int i= 0;i<=tringle11; i++)
    {
        glVertex2f (p11+(r11*cos(i*tp11/tringle11)),
                    q11+(r11*sin(i*tp11/tringle11))
                    );


    }
    glEnd();

    GLfloat p12= -0.1f; GLfloat q12= -0.3f; GLfloat r12 = 0.10f;
    int tringle12=40;

    GLfloat tp12 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub(0, 204, 0);
    glVertex2f (p12,q12);
    for(int i= 0;i<=tringle12; i++)
    {
        glVertex2f (p12+(r12*cos(i*tp12/tringle12)),
                    q12+(r12*sin(i*tp12/tringle12))
                    );


    }
    glEnd();

    glLineWidth(7.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.1,-0.7);
    glVertex2f(-0.1,-0.4);
    glEnd();

    glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(-0.2,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();

        glLineWidth(2.0f);
    glBegin(GL_LINES);
    glColor3ub(128, 0, 0);
    glVertex2f(0.0,-0.4);
    glVertex2f(-0.1,-0.5);
    glEnd();





//Front River_________________________
//River Line
//1

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.125f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glEnd();



 //2

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.195f,-1.0f);
 glEnd();



//3

 glLineWidth(14.5);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.31f,-0.25f);
 glVertex2f(0.405f,-0.70f);
 glEnd();



//4

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(1.0f,-0.7f);
 glEnd();


 //5

 glLineWidth(15);
 glBegin(GL_LINES);
 glColor3ub(105,105,105);
 glVertex2f(0.41f,-0.70f);
 glVertex2f(-1.0f,-0.7f);
 glEnd();






//Front Fountain____________________
//1 : Attached

 glBegin(GL_QUADS);
 glColor3ub(30,144,255);
 glVertex2f(0.26f,-0.06f);
 glVertex2f(0.10f,-0.05f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.32f,-0.25f);
 glEnd();


// Fountain Stream___________________________________________________________code : 2092 to 2126___________________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.08f);
glVertex2d(0.17f ,-0.2f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.1f);
glVertex2d(0.21f ,-0.2f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.13f);
glVertex2d(0.14f ,-0.23f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.18f ,-0.17f);
glVertex2d(0.189f ,-0.23f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.13f);
glVertex2d(0.27f ,-0.19f);
glEnd();



//River Water____________________
//1 : Attached

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(0.32f,-0.25f);
 glVertex2f(0.12f,-0.25f);
 glVertex2f(0.10f,-0.7f);
 glVertex2f(0.20f,-1.0f);
 glVertex2f(0.40f,-0.70f);

 glEnd();


 // 1.River Stream____________________________________________code : 2144 to 2192_________________________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.15f ,-0.6f);
glVertex2d(0.17f ,-0.67f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.19f ,-0.4f);
glVertex2d(0.21f ,-0.45f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.13f ,-0.43f);
glVertex2d(0.14f ,-0.48f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.53f);
glVertex2d(0.32f ,-0.57f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.25f ,-0.63f);
glVertex2d(0.27f ,-0.69f);
glEnd();




//2

 glBegin(GL_POLYGON);
 glColor3ub(30,144,255);
 glVertex2f(1.0f,-0.7f);
 glVertex2f(-1.0f,-0.7f);
 glVertex2f(-1.0f,-1.0f);
 glVertex2f(1.0f,-1.0f);
 glEnd();


  // 2.River Stream____________________________________________code : 2195 to 2238__________________________Animation added x horizontally________________________________________

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.1f ,-0.8f);
glVertex2d(0.2f ,-0.8f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.1f ,-0.9f);
glVertex2d(-0.21f ,-0.9f);
glEnd();

glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.3f ,-0.93f);
glVertex2d(0.4f ,-0.937f);
glEnd();


glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.8f ,-0.83f);
glVertex2d(-0.9f ,-0.836f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(0.5f ,-0.85f);
glVertex2d(0.6f ,-0.86f);
glEnd();



glBegin(GL_LINES);
glColor3ub(0,191,250);
glVertex2d(-0.6f ,-0.91f);
glVertex2d(-0.7f ,-0.92f);
glEnd();




// Fountain Bubble______________________________________________________
// Starting side : Right
//Serial : 01
//1

    GLfloat p011=0.295f; GLfloat q011= -0.26f; GLfloat r011 = 0.028f;
    int tringle011=40;

    GLfloat tp011 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p011,q011);
    for(int i= 0;i<=tringle001; i++)
    {
        glVertex2f (
                    p011+(r011*cos(i*tp011/tringle011)),
                    q011+(r011*sin(i*tp011/tringle011))
                    );
    }

 glEnd ();


//2

     GLfloat p012=0.25f; GLfloat q012= -0.26f; GLfloat r012 = 0.025f;
    int tringle012=40;

    GLfloat tp012 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p012,q012);
    for(int i= 0;i<=tringle012; i++)
    {
        glVertex2f (
                    p012+(r012*cos(i*tp012/tringle012)),
                    q012+(r012*sin(i*tp012/tringle012))
                    );
    }

 glEnd ();


//3

    GLfloat p013=0.2f; GLfloat q013= -0.26f; GLfloat r013 = 0.028f;
    int tringle013=40;

    GLfloat tp013 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p013,q013);
    for(int i= 0;i<=tringle013; i++)
    {
        glVertex2f (
                    p013+(r013*cos(i*tp013/tringle013)),
                    q013+(r013*sin(i*tp013/tringle013))
                    );
    }

 glEnd ();


//4

    GLfloat p014=0.155f; GLfloat q014= -0.26f; GLfloat r014 = 0.036f;
    int tringle014=40;

    GLfloat tp014 =1.0f * PI  ;

glBegin (GL_TRIANGLE_FAN);
    glColor3ub(176,224,230);

    glVertex2f (p014,q014);
    for(int i= 0;i<=tringle014; i++)
    {
        glVertex2f (
                    p014+(r014*cos(i*tp014/tringle014)),
                    q014+(r014*sin(i*tp014/tringle014))
                    );
    }

 glEnd ();









//Stick_______________________________

glLineWidth(4.5);
glBegin(GL_LINES);
glColor3ub(139,69,19);
glVertex2d(-0.328f,-0.69f);
glVertex2d(-0.328f,-0.61f);
glEnd();







//Barrier boat______________________________

glBegin(GL_QUADS);
glColor3ub(128,0,0);
glVertex2d(-0.1f,-0.71f);
glVertex2d(-0.3f,-0.71f);
glVertex2d(-0.24f,-0.76f);
glVertex2d(-0.16f,-0.76f);
glEnd();

//Rope
//1
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.33f,-0.65f);
glVertex2d(-0.28f,-0.71f);
glEnd();

//2
glLineWidth(3.1);
glBegin(GL_LINES);
glColor3ub(0,0,0);
glVertex2d(-0.28f,-0.71f);
glVertex2d(-0.287f,-0.72f);
glEnd();


//load
//front

glBegin(GL_QUADS);
glColor3ub(184,134,12);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.16f,-0.68f);
glVertex2d(-0.15f,-0.71f);
glVertex2d(-0.23f,-0.71f);
glEnd();

//back

glBegin(GL_TRIANGLES);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(-0.23f,-0.68f);
glVertex2d(-0.24f,-0.71f);
glVertex2d(-0.22f,-0.71f);
glEnd();



//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();

    //__________________ Boat __________________ Faysal (20-43800-2)__________________

glPushMatrix();
glTranslated(position_Boat,0.0f,0.0f);

glBegin(GL_POLYGON);
glColor3f(0.0f,0.0f,0.0f);
glVertex2d(0.4f,-0.78f);
glVertex2d(0.49f,-0.85f);
glVertex2d(0.61f,-0.85f);
glVertex2d(0.7f,-0.78f);
glEnd();

    glLineWidth(1.5f);
    glBegin(GL_LINES);
    glColor3ub(0.0f, 0.0f, 0.0f);
    glVertex2f(0.55,-0.78);
    glVertex2f(0.55,-0.5);
    glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.545f,-0.45f);
glVertex2d(0.47f,-0.77f);
glVertex2d(0.545f,-0.77f);
glEnd();

glBegin(GL_TRIANGLES);
glColor3ub(220,220,60);
glVertex2d(0.555f,-0.45f);
glVertex2d(0.65f,-0.77f);
glVertex2d(0.555f,-0.77f);
glEnd();








//Boat___________________________________




glBegin(GL_QUADS);
glColor3f(0.5,0.0f,0.0f);
glVertex2d(0.3f,-0.87f);
glVertex2d(0.5f,-0.87f);
glVertex2d(0.44f,-0.92f);
glVertex2d(0.36f,-0.92f);
glEnd();


//load

glBegin(GL_QUADS);
glColor3f(0.8,0.7f,0.0f);
glVertex2d(0.46f,-0.85f);
glVertex2d(0.38f,-0.85f);
glVertex2d(0.38f,-0.87f);
glVertex2d(0.46f,-0.87f);
glEnd();


//stick
//1

glLineWidth(1.5);
glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.87f);
glVertex2d(0.44f,-0.77f);
glEnd();


//2

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.87f);
glVertex2d(0.43f,-0.77f);
glEnd();


//3

glBegin(GL_LINES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.87f);
glVertex2d(0.4f,-0.81f);
glEnd();


//Flag
//1
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.44f,-0.77f);
glVertex2d(0.48f,-0.84f);
glVertex2d(0.44f,-0.83f);
glEnd();

//2
glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.43f,-0.77f);
glVertex2d(0.39f,-0.84f);
glVertex2d(0.43f,-0.83f);
glEnd();


//3

glBegin(GL_TRIANGLES);
glColor3f(1.0,0.0f,0.0f);
glVertex2d(0.4f,-0.81f);
glVertex2d(0.37f,-0.85f);
glVertex2d(0.4f,-0.84f);
glEnd();
glPopMatrix();






glFlush();






//Bridge_______________________________________


glLineWidth(2.5);
glBegin(GL_POLYGON);
glColor3ub(139,69,19);
glVertex2d(0.38f,-0.45f);
glVertex2d(0.34f,-0.43f);
glVertex2d(0.12f,-0.43f);
glVertex2d(0.07f,-0.45f);
glEnd();


glBegin(GL_LINES);
glColor3ub(205,133,63);
glVertex2d(0.10,-0.44);
glVertex2d(0.10,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.13,-0.44);
glVertex2d(0.13,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.16,-0.44);
glVertex2d(0.16,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.19,-0.44);
glVertex2d(0.19,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.22,-0.44);
glVertex2d(0.22,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.25,-0.44);
glVertex2d(0.25,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.28,-0.44);
glVertex2d(0.28,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.31,-0.44);
glVertex2d(0.31,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.35,-0.44);
glVertex2d(0.35,-0.39);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.10,-0.39);
glVertex2d(0.35,-0.39);
glEnd();





//SUN FLOWER TREE RIGHT SIDE FRONT= TAWFIQ 20-43518-1


GLfloat p305=0.50f; GLfloat q305=-0.10f; GLfloat r305 = 0.01f;
    int tringle305=40;

    GLfloat tp305 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p305,q305);
    for(int i= 0;i<=tringle305; i++)
    {
        glVertex2f (
                    p305+(r305*cos(i*tp305/tringle305)),
                    q305+(r305*sin(i*tp305/tringle305)));



    }

 glEnd ();

 GLfloat p306=0.52f; GLfloat q306=-0.10f; GLfloat r306 = 0.01f;
    int tringle306=40;

    GLfloat tp306 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p306,q306);
    for(int i= 0;i<=tringle306; i++)
    {
        glVertex2f (
                    p306+(r306*cos(i*tp306/tringle306)),
                    q306+(r306*sin(i*tp306/tringle306)));



    }

 glEnd ();

 GLfloat p307=0.50f; GLfloat q307=-0.12f; GLfloat r307 = 0.01f;
    int tringle307=40;

    GLfloat tp307 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p307,q307);
    for(int i= 0;i<=tringle307; i++)
    {
        glVertex2f (
                    p307+(r307*cos(i*tp307/tringle307)),
                    q307+(r307*sin(i*tp307/tringle307)));



    }

 glEnd ();

  GLfloat p308=0.52f; GLfloat q308=-0.12f; GLfloat r308 = 0.01f;
    int tringle308=40;

    GLfloat tp308 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p308,q308);
    for(int i= 0;i<=tringle308; i++)
    {
        glVertex2f (
                    p308+(r308*cos(i*tp308/tringle308)),
                    q308+(r308*sin(i*tp308/tringle308)));



    }

 glEnd ();

 glLineWidth(0.01);
 glBegin(GL_LINES);
 glColor3f(1.02f,0.51f,0.0f);
 glVertex2f(0.51f,-0.12f);
 glVertex2f(0.49f,-0.25f);
 glEnd();

 //SUN FLOWER TREE 2 RIGHT SIDE FRONT= TAWFIQ 20-43518-1

GLfloat p309=0.60f; GLfloat q309=-0.10f; GLfloat r309 = 0.01f;
    int tringle309=40;

    GLfloat tp309 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p309,q309);
    for(int i= 0;i<=tringle309; i++)
    {
        glVertex2f (
                    p309+(r309*cos(i*tp309/tringle309)),
                    q309+(r309*sin(i*tp309/tringle309)));



    }

 glEnd ();

 GLfloat p310=0.62f; GLfloat q310=-0.10f; GLfloat r310 = 0.01f;
    int tringle310=40;

    GLfloat tp310 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p310,q310);
    for(int i= 0;i<=tringle310; i++)
    {
        glVertex2f (
                    p310+(r310*cos(i*tp310/tringle310)),
                    q310+(r310*sin(i*tp310/tringle310)));



    }

 glEnd ();

 GLfloat p311=0.60f; GLfloat q311=-0.12f; GLfloat r311 = 0.01f;
    int tringle311=40;

    GLfloat tp311 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p311,q311);
    for(int i= 0;i<=tringle311; i++)
    {
        glVertex2f (
                    p311+(r311*cos(i*tp311/tringle311)),
                    q311+(r311*sin(i*tp311/tringle311)));



    }

 glEnd ();

  GLfloat p312=0.62f; GLfloat q312=-0.12f; GLfloat r312 = 0.01f;
    int tringle312=40;

    GLfloat tp312 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3f(1.0f,1.0f,0.0f);
    glVertex2f (p312,q312);
    for(int i= 0;i<=tringle312; i++)
    {
        glVertex2f (
                    p312+(r312*cos(i*tp312/tringle312)),
                    q312+(r312*sin(i*tp312/tringle312)));



    }

 glEnd ();

 glLineWidth(0.01);
 glBegin(GL_LINES);
 glColor3f(1.02f,0.51f,0.0f);
 glVertex2f(0.61f,-0.12f);
 glVertex2f(0.59f,-0.25f);
 glEnd();














//Cycle___________________________________________________________

//Serial : 10
//1


GLfloat p101=0.5f; GLfloat q101= -0.43f; GLfloat r101 = 0.015f;
    int tringle101=40;

    GLfloat tp101 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub ( 0,0,0);
    glVertex2f (p101,q101);
    for(int i= 0;i<=tringle101; i++)
    {
        glVertex2f (
                    p101+(r101*cos(i*tp101/tringle101)),
                    q101+(r101*sin(i*tp101/tringle101))
                    );


    }
    glEnd ();



//2

GLfloat p102=0.41f; GLfloat q102= -0.43f; GLfloat r102 = 0.015f;
    int tringle102=40;

    GLfloat tp102 =2.0f * PI  ;

    glBegin (GL_TRIANGLE_FAN);
    glColor3ub ( 0,0,0);
    glVertex2f (p102,q102);
    for(int i= 0;i<=tringle102; i++)
    {
        glVertex2f (
                    p102+(r102*cos(i*tp102/tringle102)),
                    q102+(r102*sin(i*tp102/tringle102))
                    );


    }
    glEnd ();


glLineWidth(3.5);
glBegin(GL_LINES);
glColor3ub(178,34,34);
glVertex2d(0.41f , -0.43f);
glVertex2d(0.47f , -0.41f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.47f , -0.41f);
glVertex2d(0.49f , -0.38f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.44f , -0.37f);
glVertex2d(0.49f , -0.38f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.44f , -0.37f);
glVertex2d(0.41f , -0.43f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.5f , -0.43f);
glVertex2d(0.48f , -0.33f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.47f , -0.33f);
glVertex2d(0.48f , -0.33f);
glEnd();


glBegin(GL_LINES);
glVertex2d(0.45f , -0.36f);
glVertex2d(0.43f , -0.37f);
glEnd();



Idle();


glFlush();
}


void handleKeypress(unsigned char key, int x, int y) {
switch (key) {
case 'n':
        night=true;
    break;
case 'd':
        night=false;
    break;


glutPostRedisplay();
}
}




int main(int argc, char** argv) {
   glutInit(&argc, argv);
   glutInitWindowSize(320, 320);
   glutInitWindowPosition(50, 50);
   glutCreateWindow("Hilly Village");
   //glutTimerFunc(100, update_sun, 0);
   glutTimerFunc(100, update_cloud, 0);
   glutTimerFunc(100, Rupdate_cloud, 0);
   glutTimerFunc(100, update_Boat, 0);
   glutTimerFunc(100, update_Bird, 0);
   glutTimerFunc(100,updateRain,0);
   glutTimerFunc(100,update_Snow,0);
   glutTimerFunc(100,update_Baloon,0);
   glutDisplayFunc(summer);
    glutKeyboardFunc(handleKeypress);
   glutMainLoop();
   return 0;
}
